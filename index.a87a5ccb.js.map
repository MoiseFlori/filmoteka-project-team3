{"mappings":"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","sources":["src/js/api/genresApi.js","src/js/components/pagination.js","src/js/api/moviesApi.js","src/js/api/config.js","src/js/components/refs.js","src/js/components/movieList.js","src/js/components/searchBar.js","src/js/components/trailer.js","src/js/app/localStorage.js","src/js/components/buttons.js","src/js/components/modal.js","src/index.js"],"sourcesContent":["import { BASE_URL, API_KEY } from './config.js';\n\nlet genresCache = []; \n\nexport async function fetchGenres() {\n  const apiUrl = `${BASE_URL}/genre/movie/list?api_key=${API_KEY}&language=en-US`;\n\n  try {\n    const response = await fetch(apiUrl);\n    const data = await response.json();\n\n    if (data.genres) {\n      genresCache = data.genres; \n    }\n\n    return genresCache;\n  } catch (error) {\n    console.error('Eroare la încărcarea genurilor:', error);\n    return [];\n  }\n}\n\nexport async function getGenres() {\n  if (genresCache.length === 0) {\n    await fetchGenres();\n  }\n  return genresCache;\n}\n","import { renderMovies, renderSearchedMovies } from './movieList';\nimport { currentSearchQuery } from './searchBar';\n\nconst btn1Ref = document.querySelector('[data-index=\"1\"]');\nconst btn2Ref = document.querySelector('[data-index=\"2\"]');\nconst btn3Ref = document.querySelector('[data-index=\"3\"]');\nconst btn4Ref = document.querySelector('[data-index=\"4\"]');\nconst btn5Ref = document.querySelector('[data-index=\"5\"]');\nconst firstPageRef = document.querySelector('.first-button');\nconst lastPageRef = document.querySelector('.last-button');\nconst paginationRef = document.querySelector('.pagination-container');\nconst rightArrowRef = document.querySelector('.arrow-right');\nconst leftArrowRef = document.querySelector('.arrow-left');\nconst prevDotsRef = document.querySelector('#previous');\nconst afterDotsRef = document.querySelector('#after');\n\nlet currentPage = 1;\nlet totalPages = 20;\n\n// Initialize pagination\npaginationRef.addEventListener('click', onPaginationClick);\n\nfunction updatePageButtons(total) {\n  totalPages = Math.min(total || 20, 20);\n  \n  paginationRef.style.display = 'flex';\n  \n  const pageButtons = [btn1Ref, btn2Ref, btn3Ref, btn4Ref, btn5Ref];\n  pageButtons.forEach(btn => btn.hidden = true);\n  \n  // Show only the buttons needed\n  for (let i = 0; i < Math.min(totalPages, 5); i++) {\n    pageButtons[i].hidden = false;\n    pageButtons[i].textContent = i + 1;\n    pageButtons[i].classList.toggle('pagination--current', i + 1 === currentPage);\n  }\n\n  lastPageRef.textContent = totalPages;\n  \n  // Hide first button and dots if we're at the start or have few pages\n  firstPageRef.hidden = currentPage <= 3 || totalPages <= 5;\n  prevDotsRef.hidden = currentPage <= 3 || totalPages <= 5;\n  \n  // Hide last button and dots if we're at the end or have few pages\n  lastPageRef.hidden = currentPage >= totalPages - 2 || totalPages <= 5;\n  afterDotsRef.hidden = currentPage >= totalPages - 2 || totalPages <= 5;\n  \n  // Show/hide arrows based only on current position\n  leftArrowRef.hidden = currentPage <= 1;\n  rightArrowRef.hidden = currentPage >= totalPages;\n\n  // Adjust button numbers for when we're near the end\n  if (currentPage > 3 && totalPages > 5) {\n    let startPage = currentPage - 2;\n    if (startPage + 4 > totalPages) {\n      startPage = totalPages - 4;\n    }\n    pageButtons.forEach((btn, index) => {\n      if (!btn.hidden) {\n        btn.textContent = startPage + index;\n        btn.classList.toggle('pagination--current', startPage + index === currentPage);\n      }\n    });\n  }\n}\n\nasync function onPaginationClick(event) {\n  const target = event.target;\n\n  if (target.tagName === 'BUTTON') {\n    target.blur();\n    const prevPage = currentPage;\n\n    if (target.classList.contains('pagination-button') && target.dataset.index) {\n      currentPage = Number(target.textContent);\n    } else if (target.classList.contains('arrow-right') && currentPage < totalPages) {\n      currentPage += 1;\n    } else if (target.classList.contains('arrow-left') && currentPage > 1) {\n      currentPage -= 1;\n    } else if (target.classList.contains('first-button')) {\n      currentPage = 1;\n    } else if (target.classList.contains('last-button')) {\n      currentPage = totalPages;\n    }\n\n    if (prevPage !== currentPage) {\n      window.scrollTo({ top: 0, behavior: 'smooth' });\n      \n      if (currentSearchQuery) {\n        await renderSearchedMovies(currentSearchQuery, currentPage);\n      } else {\n        await renderMovies(currentPage);\n      }\n    }\n  }\n}\n\nfunction defineResultsPerPage() {\n  let pageSize = 9;\n  if (window.innerWidth >= 1024) {\n    pageSize = 9;\n  } else if (window.innerWidth >= 768 && window.innerWidth < 1024) {\n    pageSize = 8;\n  } else if (window.innerWidth < 768) {\n    pageSize = 4;\n  }\n  return pageSize;\n}\n\nwindow.addEventListener('resize', defineResultsPerPage);\n\nexport { \n  currentPage, \n  defineResultsPerPage, \n  updatePageButtons \n};","// Funcții pentru obținerea datelor despre filme:\n// fetchPopularMovies()\n// fetchMovieById(id)\n// searchMovies(query, page)\n\n// Funcția pentru obținerea filmelor populare\nimport { BASE_URL, API_KEY } from './config.js';\nimport { getGenres } from './genresApi.js';\nimport { currentPage } from '../components/pagination';\n\nexport async function fetchPopularMovies(page = currentPage) {\n  console.log('Fetching popular movies for page:', page);\n  const apiUrl = `${BASE_URL}/movie/popular?api_key=${API_KEY}&language=en-US&page=${page}`;\n\n  try {\n    const response = await fetch(apiUrl);\n    const data = await response.json();\n\n    if (!data.results || data.results.length === 0) {\n      console.error('No popular movies found:', data);\n      return { results: [], total_pages: 0 };\n    }\n\n    const genres = await getGenres();\n    const moviesWithGenres = data.results.map(movie => ({\n      ...movie,\n      genre_names: movie.genre_ids.map(\n        id => genres.find(genre => genre.id === id)?.name || 'Unknown'\n      ),\n    }));\n\n    const limitedTotalPages = Math.min(data.total_pages, 20);\n\n    return {\n      results: moviesWithGenres,\n      total_pages: limitedTotalPages\n    };\n  } catch (error) {\n    console.error('Error fetching popular movies:', error);\n    return { results: [], total_pages: 0 };\n  }\n}\n\nexport async function searchMovies(query, page = 1) {\n  const searchParams = new URLSearchParams({\n    api_key: API_KEY,\n    query: query,\n    page: page,\n    language: 'en-US',\n    include_adult: false,\n  });\n\n  const apiUrl = `${BASE_URL}/search/movie?${searchParams}`;\n\n  try {\n    const response = await fetch(apiUrl);\n    const data = await response.json();\n\n    if (!data || !data.results) {\n      return { results: [], total_pages: 0 };\n    }\n\n    const genres = await getGenres();\n    const moviesWithGenres = data.results.map(movie => ({\n      ...movie,\n      genre_names: movie.genre_ids?.map(\n        id => genres.find(genre => genre.id === id)?.name || 'Unknown'\n      ) || [],\n    }));\n\n    // Limit total pages to 20\n    const limitedTotalPages = Math.min(data.total_pages, 20);\n\n    return {\n      results: moviesWithGenres,\n      total_pages: limitedTotalPages\n    };\n  } catch (error) {\n    console.error('Error fetching movies:', error);\n    return { results: [], total_pages: 0 };\n  }\n}\n\nexport async function fetchMovieDetails(movieId) {\n  const MOVIE_DETAIL_URL = `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}&language=en-US`;\n\n  try {\n    const response = await fetch(MOVIE_DETAIL_URL);\n    if (!response.ok) {\n      throw new Error('Failed to fetch movie details');\n    }\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error('Error fetching movie details:', error);\n    throw error;\n  }\n}\n\nexport async function fetchMovieById(id) {\n  const apiUrl = `${BASE_URL}/movie/${id}?api_key=${API_KEY}&language=en-US`;\n\n  try {\n    const response = await fetch(apiUrl);\n\n    if (!response.ok) {\n      throw new Error('Failed to fetch movie details');\n    }\n\n    const data = await response.json();\n\n    if (data.success === false) {\n      console.error('The resource you requested could not be found.');\n      return false;\n    }\n\n    return data;\n  } catch (error) {\n    console.error('Error fetching movie by Id:', error);\n    return null;\n  }\n}\n\nexport async function fetchTrailerUrl(movieId) {\n  try {\n    const response = await fetch(\n      `${BASE_URL}/movie/${movieId}/videos?api_key=${API_KEY}`\n    );\n    const data = await response.json();\n    const trailer = data.results.find(\n      video => video.type === 'Trailer' && video.site === 'YouTube'\n    );\n    return trailer ? `https://www.youtube.com/embed/${trailer.key}` : null;\n  } catch (error) {\n    console.error('Error fetching trailer URL:', error);\n    return null;\n  }\n}","// Configurațiile API-ului:\n// URL-ul de bază (BASE_URL)\n// Cheia API (API_KEY).\n\nexport const BASE_URL = 'https://api.themoviedb.org/3';\nexport const API_KEY = '21161239b69d8dd6ebeec5ac6086d760';\n","const formRef = document.getElementById('search-form');\nconst inputRef = document.querySelector('.form-input');\nconst gallery = document.querySelector('.movies');\nconst headerRef = document.querySelector('.header');\nconst pageHomeRef = document.querySelector('.menu__link-home');\nconst pageLabraryRef = document.querySelector('.menu__link-library');\nconst modalBackdrop = document.querySelector('.modal__backdrop');\nconst modalBox = document.getElementById('modal');\nconst headerWarning = document.querySelector('.warning-notification');\nconst pagiCont = document.querySelector('.pagination-container');\nexport {\n  formRef,\n  inputRef,\n  gallery,\n  headerRef,\n  pageHomeRef,\n  pageLabraryRef,\n  modalBackdrop,\n  modalBox,\n  headerWarning,\n  pagiCont,\n};","import { searchMovies, fetchPopularMovies } from '../api/moviesApi';\nimport { updatePageButtons, currentPage } from './pagination';\nimport { currentSearchQuery } from './searchBar';\nimport { gallery } from './refs';\n\nexport function generateMovieHTML(movie) {\n  let ratingClass = 'movie__average--red';\n  if (movie.vote_average >= 7) ratingClass = 'movie__average--green';\n  else if (movie.vote_average >= 5) ratingClass = 'movie__average--orange';\n\n  const moviePoster = movie.poster_path\n    ? `https://image.tmdb.org/t/p/w500${movie.poster_path}`\n    : './images/no-image-available.jpg';\n\n  const altText = movie.poster_path\n    ? `${movie.title || ''} movie poster`\n    : 'No poster available';\n\n  const genresArray = movie.genre_names || [];\n  let displayedGenres = genresArray.slice(0, 2);\n  if (genresArray.length > 2) {\n    displayedGenres.push('Other');\n  }\n\n  const genres = genresArray.length > 0 ? displayedGenres.join(', ') : '';\n  const rating = movie.vote_average !== undefined ? movie.vote_average.toFixed(1) : '';\n  const releaseYear = movie.release_date ? new Date(movie.release_date).getFullYear() : '';\n\n  return `\n    <li class=\"movie_list_item\" data-movie-id=\"${movie.id || ''}\">\n      <div class=\"movie__cover-inner\">\n        <img \n          class=\"movie__cover\" \n          src=\"${moviePoster}\" \n          alt=\"${altText}\" \n        />\n      </div>\n      <div class=\"movie__cover--darkened\"></div>\n      <div class=\"movie-info\">\n        ${movie.title ? `<h3 class=\"movie-title\">${movie.title}</h3>` : ''}\n        ${\n          genres || releaseYear\n            ? `<p class=\"movie-date\">${[genres, releaseYear]\n                .filter(Boolean)\n                .join(' | ')}</p>`\n            : ''\n        }\n        ${\n          rating\n            ? `<div class=\"movie__average ${ratingClass}\">${rating}</div>`\n            : ''\n        }\n      </div>\n    </li>\n  `;\n}\n\nfunction getMoviesPerPage() {\n  const width = window.innerWidth;\n  if (width >= 1024) return 9;\n  if (width >= 768) return 8;\n  return 4;\n}\n\nexport async function renderSearchedMovies(query, page) {\n  try {\n    const { results, total_pages } = await searchMovies(query, page);\n    \n    if (!results || results.length === 0) {\n      gallery.innerHTML = '<p>No movies found.</p>';\n      updatePageButtons(0); // Hide pagination when no results\n      return;\n    }\n\n    const moviesPerPage = getMoviesPerPage();\n    const moviesToShow = results.slice(0, moviesPerPage);\n    const moviesHTML = moviesToShow.map(generateMovieHTML).join('');\n    gallery.innerHTML = moviesHTML;\n    \n    // Update pagination with the actual number of pages from search results\n    updatePageButtons(total_pages);\n  } catch (error) {\n    console.error('Error displaying searched movies:', error);\n    gallery.innerHTML = '<p>Error loading movies.</p>';\n    updatePageButtons(0);\n  }\n}\n\nexport async function renderMovies(page = 1) {\n  console.log('Rendering movies for page:', page);\n  try {\n    const { results, total_pages } = await fetchPopularMovies(page);\n    \n    if (!results || results.length === 0) {\n      console.warn('No movies found');\n      gallery.innerHTML = '<p>No movies found.</p>';\n      updatePageButtons(0);\n      return;\n    }\n\n    console.log('Movies fetched:', results.length);\n    const moviesPerPage = getMoviesPerPage();\n    const moviesToShow = results.slice(0, moviesPerPage);\n    const moviesHTML = moviesToShow.map(generateMovieHTML).join('');\n    \n    if (gallery) {\n      gallery.innerHTML = moviesHTML;\n      updatePageButtons(total_pages);\n    } else {\n      console.error('Gallery element not found');\n    }\n  } catch (error) {\n    console.error('Error displaying movies:', error);\n    if (gallery) {\n      gallery.innerHTML = '<p>Error loading movies.</p>';\n    }\n    updatePageButtons(0);\n  }\n}\n\n// Add resize listener to handle responsive layout\nwindow.addEventListener('resize', () => {\n  if (gallery.children.length > 0) {\n    // Re-render current page when window is resized\n    if (currentSearchQuery) {\n      renderSearchedMovies(currentSearchQuery, currentPage);\n    } else {\n      renderMovies(currentPage);\n    }\n  }\n});","// Logic for the search bar (including input events)\nconst searchText = document.querySelector('.search');\nconst searchButton = document.querySelector('.search-button');\n\nimport { renderSearchedMovies } from './movieList';\n\nlet currentSearchQuery = '';\n\nsearchButton.addEventListener('click', async function (e) {\n  e.preventDefault();\n  if (searchText.value.trim() === '') return;\n  currentSearchQuery = searchText.value.trim(); \n  await renderSearchedMovies(currentSearchQuery, 1);\n  searchText.value = '';\n});\n\nsearchText.addEventListener('keydown', async function (e) {\n  if (e.key === 'Enter') {\n    e.preventDefault();\n    if (searchText.value.trim() === '') return;\n    currentSearchQuery = searchText.value.trim();\n    await renderSearchedMovies(currentSearchQuery, 1);\n    searchText.value = '';\n  }\n});\n\nexport { currentSearchQuery };","export function initializeTrailerModal() {\n  const trailerModalWrapper = document.getElementById(\n    'trailer-modal-container'\n  );\n  const trailerBackdrop = document.getElementById('trailer-backdrop');\n  const trailerContent = document.getElementById('trailer-content');\n\n  function openTrailerModal(trailerUrl) {\n    // Adauga iframe-ul pentru trailer\n    trailerContent.innerHTML = `\n      <iframe \n        src=\"${trailerUrl}\" \n        frameborder=\"0\" \n        allow=\"autoplay; encrypted-media\" \n        allowfullscreen>\n      </iframe>`;\n    trailerModalWrapper.classList.add('open');\n  }\n\n  function closeTrailerModal() {\n    trailerContent.innerHTML = ''; // Elimina iframe-ul cand se inchide modal-ul\n    trailerModalWrapper.classList.remove('open');\n  }\n\n  trailerBackdrop.addEventListener('click', closeTrailerModal);\n  document.addEventListener('keydown', e => {\n    if (e.key === 'Escape' && trailerModalWrapper.classList.contains('open')) {\n      closeTrailerModal();\n    }\n  });\n\n  return openTrailerModal;\n}\n","export function getFromStorage(key) {\n  return JSON.parse(localStorage.getItem(key)) || [];\n}\n\nexport function isInStorage(key, id) {\n  const items = getFromStorage(key);\n  return items.some(item => item.id === id);\n}\n\nexport function toggleStorage(key, movie) {\n  let items = getFromStorage(key);\n\n  if (isInStorage(key, movie.id)) {\n    items = items.filter(item => item.id !== movie.id);\n  } else {\n    items.push(movie);\n  }\n\n  localStorage.setItem(key, JSON.stringify(items));\n}\n\nexport function saveToStorage(key, data) {\n  localStorage.setItem(key, JSON.stringify(data));\n}\n","// Managing the \"Add to Watch\" and \"Add to Queue\" buttons\nimport { toggleStorage, isInStorage } from '../app/localStorage';\n\nconst libraryBtn = document.getElementById('library-btn');\nconst homeBtn = document.getElementById('home-btn');\nconst searchForm = document.getElementById('search-form');\nconst libraryButtons = document.getElementById('library-buttons');\nconst watchedButton = document.getElementById('watched-button');\nconst queueButton = document.getElementById('queue-button');\n\nexport function setupButtons(movie) {\n  watchedButton.textContent = isInStorage('watched', movie.id)\n    ? 'REMOVE FROM WATCHED'\n    : 'ADD TO WATCHED';\n\n  queueButton.textContent = isInStorage('queue', movie.id)\n    ? 'REMOVE FROM QUEUE'\n    : 'ADD TO QUEUE';\n\n  watchedButton.onclick = () => {\n    toggleStorage('watched', movie);\n    watchedButton.textContent = isInStorage('watched', movie.id)\n      ? 'REMOVE FROM WATCHED'\n      : 'ADD TO WATCHED';\n  };\n\n  queueButton.onclick = () => {\n    toggleStorage('queue', movie);\n    queueButton.textContent = isInStorage('queue', movie.id)\n      ? 'REMOVE FROM QUEUE'\n      : 'ADD TO QUEUE';\n  };\n}\nexport function toggleHeaderButtons() {\n\n  function activateHome() {\n    searchForm.style.display = 'block';\n    libraryButtons.style.display = 'none';\n\n    homeBtn.classList.add('active');\n    libraryBtn.classList.remove('active');\n  }\n\n  \n  function activateLibrary() {\n    searchForm.style.display = 'none';\n    libraryButtons.style.display = 'flex';\n\n    libraryBtn.classList.add('active');\n    homeBtn.classList.remove('active');\n  }\n\n\n  homeBtn.addEventListener('click', activateHome);\n  libraryBtn.addEventListener('click', activateLibrary);\n\n\n  activateHome();\n}\n\n","import {\n  fetchPopularMovies,\n  fetchMovieDetails,\n  fetchTrailerUrl,\n} from '../api/moviesApi';\nimport { generateMovieHTML } from '../components/movieList';\nimport { initializeTrailerModal } from '../components/trailer';\nimport { setupButtons } from '../components/buttons';\n\nexport async function initializeModal() {\n  const movieList = document.querySelector('.movies');\n  const modalWrapper = document.querySelector('.modal-wrapper');\n  const backdrop = document.querySelector('.backdrop');\n  const posterSection = document.getElementById('poster-section');\n  const movieTitle = document.getElementById('movie-title');\n  const movieVotes = document.getElementById('movie-votes');\n  const moviePopularity = document.getElementById('movie-popularity');\n  const originalTitle = document.getElementById('original-title');\n  const movieGenre = document.getElementById('movie-genre');\n  const movieAbout = document.getElementById('movie-about');\n  const trailerButton = document.getElementById('trailer-button');\n\n  const openTrailerModal = initializeTrailerModal();\n\n  function renderMoviesModal(movies) {\n    movieList.innerHTML = '';\n    const moviesMarkup = movies\n      .map(movie => generateMovieHTML(movie))\n      .join('');\n    movieList.innerHTML = moviesMarkup;\n  }\n\n  movieList.addEventListener('click', event => {\n    const movieCard = event.target.closest('.movie_list_item');\n    if (movieCard) {\n      const movieId = movieCard.getAttribute('data-movie-id');\n      handleMovieDetails(movieId);\n    }\n  });\n\n  async function handleMovieDetails(movieId) {\n    try {\n      const movieDetails = await fetchMovieDetails(movieId);\n      populateModal(movieDetails);\n    } catch (error) {\n      console.error('Error fetching movie details:', error);\n    }\n  }\n\n  function populateModal(data) {\n    posterSection.style.backgroundImage = `url('https://image.tmdb.org/t/p/w500/${\n      data.poster_path || ''\n    }')`;\n\n    movieTitle.textContent = data.title || 'No Title';\n\n    let ratingClass = 'movie__average--red';\n    if (data.vote_average >= 7) ratingClass = 'movie__average--green';\n    else if (data.vote_average >= 5) ratingClass = 'movie__average--orange';\n\n    const modalMovieVotes = document.querySelector('#modal-movie-votes');\n    if (modalMovieVotes) {\n      modalMovieVotes.innerHTML = `\n    <span class=\"vote-average ${ratingClass}\">\n      ${data.vote_average?.toFixed(1) || 'N/A'}\n    </span>\n    <span class=\"vote-separator\">/</span>\n    <span class=\"vote-count\">\n      ${data.vote_count || 0}\n    </span>\n  `;\n    }\n\n    moviePopularity.textContent = data.popularity?.toFixed(1) || 'N/A';\n    originalTitle.textContent = data.original_title || 'N/A';\n    movieGenre.textContent =\n      data.genres?.map(g => g.name).join(', ') || 'Unknown';\n    movieAbout.textContent = data.overview || 'No description available.';\n\n    trailerButton.onclick = () => fetchTrailer(data.id);\n    setupButtons(data);\n    openModal();\n  }\n\n  async function fetchTrailer(movieId) {\n    try {\n      const trailerUrl = await fetchTrailerUrl(movieId);\n      if (trailerUrl) {\n        openTrailerModal(trailerUrl);\n      } else {\n        alert('Trailer not available.');\n      }\n    } catch (error) {\n      console.error('Error fetching trailer:', error);\n    }\n  }\n  function openModal() {\n    document.body.classList.add('modal-open');\n    modalWrapper.classList.add('open');\n\n    backdrop.addEventListener('click', closeModal);\n    document.addEventListener('keydown', handleKeydown);\n    modalWrapper.addEventListener('click', handleOutsideClick);\n  }\n\n  function closeModal() {\n    document.body.classList.remove('modal-open');\n    modalWrapper.classList.remove('open');\n\n    backdrop.removeEventListener('click', closeModal);\n    document.removeEventListener('keydown', handleKeydown);\n    modalWrapper.removeEventListener('click', handleOutsideClick);\n  }\n\n  function handleKeydown(e) {\n    if (e.key === 'Escape' && modalWrapper.classList.contains('open')) {\n      closeModal();\n    }\n  }\n\n  function handleOutsideClick(e) {\n    const modalContent = document.getElementById('movie-details');\n    if (!modalContent.contains(e.target)) {\n      closeModal();\n    }\n  }\n\n  try {\n    const movies = await fetchPopularMovies();\n    const moviesArray = Array.isArray(movies) ? movies : movies.results || [];\n    renderMoviesModal(moviesArray);\n  } catch (error) {\n    console.error('Error fetching popular movies:', error);\n  }\n}\n","import './sass/index.scss';\nimport './sass/_pagination.scss';\n\nimport './js/components/searchBar';\n\nimport { renderMovies } from './js/components/movieList.js';\nimport { initializeModal } from './js/components/modal.js';\nimport './js/components/pagination.js';\nimport { toggleHeaderButtons } from './js/components/buttons.js';\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  renderMovies();\n  initializeModal();\n  toggleHeaderButtons();\n});\n"],"names":["$cb5bb855f2146911$var$genresCache","async","$cb5bb855f2146911$export$c5604fa8028da00","length","response","fetch","data","json","genres","error","console","$cb5bb855f2146911$export$e95d448b93b2cdb","$89f896eead6f17ea$var$btn1Ref","document","querySelector","$89f896eead6f17ea$var$btn2Ref","$89f896eead6f17ea$var$btn3Ref","$89f896eead6f17ea$var$btn4Ref","$89f896eead6f17ea$var$btn5Ref","$89f896eead6f17ea$var$firstPageRef","$89f896eead6f17ea$var$lastPageRef","$89f896eead6f17ea$var$paginationRef","$89f896eead6f17ea$var$rightArrowRef","$89f896eead6f17ea$var$leftArrowRef","$89f896eead6f17ea$var$prevDotsRef","$89f896eead6f17ea$var$afterDotsRef","$89f896eead6f17ea$export$385972cd6b54c3e1","$89f896eead6f17ea$var$totalPages","$89f896eead6f17ea$export$82fb4acf7de09014","total","Math","min","style","display","pageButtons","forEach","btn","hidden","i","textContent","classList","toggle","startPage","index","$93295c8431c78407$export$225b489b0d997c20","page","log","apiUrl","results","total_pages","moviesWithGenres","map","movie","genre_names","genre_ids","id","find","genre","name","$93295c8431c78407$export$b0c4d3ac9887d994","query","URLSearchParams","api_key","language","include_adult","$93295c8431c78407$export$a199ce1860fbd5cd","movieId","MOVIE_DETAIL_URL","ok","Error","$93295c8431c78407$export$95d25a3e459db988","trailer","video","type","site","key","addEventListener","event","target","tagName","blur","prevPage","contains","dataset","Number","window","scrollTo","top","behavior","$7a61c8decd4d727f$export$a3e10a4909eb3219","$18703c3ad17f34d6$export$ed513bafb229402d","$18703c3ad17f34d6$export$1a30573fde3dfc62","pageSize","innerWidth","getElementById","$b5a1802b03d58e34$export$b21c1b4271bdbe93","$18703c3ad17f34d6$export$53da6709e29add30","ratingClass","vote_average","moviePoster","poster_path","altText","title","genresArray","displayedGenres","slice","push","join","rating","undefined","toFixed","releaseYear","release_date","Date","getFullYear","filter","Boolean","$18703c3ad17f34d6$var$getMoviesPerPage","width","innerHTML","moviesPerPage","moviesHTML","warn","children","$7a61c8decd4d727f$var$searchText","$7a61c8decd4d727f$var$searchButton","$1ba3e3127818fd45$export$710d652e87bebf6a","trailerModalWrapper","trailerBackdrop","trailerContent","closeTrailerModal","remove","e","trailerUrl","add","$8e6b099802297ef3$export$e4c9b9bae9539063","JSON","parse","localStorage","getItem","$8e6b099802297ef3$export$35f3dfcec2dbf042","some","item","$8e6b099802297ef3$export$5894ad57f1a6e020","items","setItem","stringify","preventDefault","value","trim","$63e0eb7203c7b511$var$libraryBtn","$63e0eb7203c7b511$var$homeBtn","$63e0eb7203c7b511$var$searchForm","$63e0eb7203c7b511$var$libraryButtons","$63e0eb7203c7b511$var$watchedButton","$63e0eb7203c7b511$var$queueButton","$63e0eb7203c7b511$export$c47022e4403e80f6","onclick","$63e0eb7203c7b511$export$c13b0b1659cdb1bd","activateHome","$65a0cd66e497f444$export$aa9b0c0080dbe389","movieList","modalWrapper","backdrop","posterSection","movieTitle","moviePopularity","originalTitle","movieGenre","movieAbout","trailerButton","openTrailerModal","closeModal","body","removeEventListener","handleKeydown","handleOutsideClick","movieCard","closest","backgroundImage","modalMovieVotes","vote_count","popularity","original_title","g","overview","alert","fetchTrailer","populateModal","handleMovieDetails","getAttribute","movies","moviesMarkup","renderMoviesModal","Array","isArray"],"version":3,"file":"index.a87a5ccb.js.map"}
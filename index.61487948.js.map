{"mappings":"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","sources":["src/js/api/genresApi.js","src/js/components/loader.js","src/js/components/pagination.js","src/js/api/moviesApi.js","src/js/api/config.js","src/js/components/refs.js","src/js/components/trailer.js","src/js/app/localStorage.js","src/js/components/libraryList.js","src/js/components/libraryTabs.js","src/js/app/myLibraryPage.js","src/js/components/buttons.js","src/js/components/modal.js","src/js/components/movieList.js","src/js/app/searchPage.js","src/js/components/searchBar.js","src/js/components/circle-up.js","src/js/components/themeSwitcher.js","src/index.js"],"sourcesContent":["import { BASE_URL, API_KEY } from './config.js';\n\nlet genresCache = []; \n\nexport async function fetchGenres() {\n  const apiUrl = `${BASE_URL}/genre/movie/list?api_key=${API_KEY}&language=en-US`;\n\n  try {\n    const response = await fetch(apiUrl);\n    const data = await response.json();\n\n    if (data.genres) {\n      genresCache = data.genres; \n    }\n\n    return genresCache;\n  } catch (error) {\n    console.error('Eroare la încărcarea genurilor:', error);\n    return [];\n  }\n}\n\nexport async function getGenres() {\n  if (genresCache.length === 0) {\n    await fetchGenres();\n  }\n  return genresCache;\n}\n","const loader = document.querySelector('.loader');\n\nexport function showLoader() {\n  loader.classList.add('show');\n  setTimeout(() => {\n    loader.classList.remove('show');\n  }, 1000);\n}\n\n\nconst searchForm = document.getElementById(\"search-form\");\nsearchForm.addEventListener('submit' , () => {\n    showLoader();\n});","import { renderMovies, renderSearchedMovies } from './movieList';\nimport { currentSearchQuery } from './searchBar';\nimport { showLoader } from  './loader.js';\n\nconst btn1Ref = document.querySelector('[data-index=\"1\"]');\nconst btn2Ref = document.querySelector('[data-index=\"2\"]');\nconst btn3Ref = document.querySelector('[data-index=\"3\"]');\nconst btn4Ref = document.querySelector('[data-index=\"4\"]');\nconst btn5Ref = document.querySelector('[data-index=\"5\"]');\nconst firstPageRef = document.querySelector('.first-button');\nconst lastPageRef = document.querySelector('.last-button');\nconst paginationRef = document.querySelector('.pagination-container');\nconst rightArrowRef = document.querySelector('.arrow-right');\nconst leftArrowRef = document.querySelector('.arrow-left');\nconst prevDotsRef = document.querySelector('#previous');\nconst afterDotsRef = document.querySelector('#after');\n\nlet currentPage = 1;\nlet totalPages = 20;\n\n// Initialize pagination\npaginationRef.addEventListener('click', onPaginationClick);\n\nfunction updatePageButtons(total) {\n  totalPages = total || 1;\n  \n    \n  paginationRef.style.display = totalPages <= 1 ? 'none' : 'flex';\n  \n  const pageButtons = [btn1Ref, btn2Ref, btn3Ref, btn4Ref, btn5Ref];\n  pageButtons.forEach(btn => btn.hidden = true);\n  \n  // Arătăm maxim 5 butoane, chiar dacă avem mai multe pagini\n  const visibleButtons = Math.min(totalPages, 5);\n  for (let i = 0; i < visibleButtons; i++) {\n    pageButtons[i].hidden = false;\n    pageButtons[i].textContent = i + 1;\n    pageButtons[i].classList.toggle('pagination--current', i + 1 === currentPage);\n  }\n\n  lastPageRef.textContent = totalPages;\n  \n  // Actualizăm vizibilitatea butoanelor de navigare\n  firstPageRef.hidden = currentPage <= 3 || totalPages <= 5;\n  prevDotsRef.hidden = currentPage <= 3 || totalPages <= 5;\n  \n  lastPageRef.hidden = currentPage >= totalPages - 2 || totalPages <= 5;\n  afterDotsRef.hidden = currentPage >= totalPages - 2 || totalPages <= 5;\n  \n  leftArrowRef.hidden = currentPage <= 1;\n  rightArrowRef.hidden = currentPage >= totalPages;\n\n  // Ajustăm numerele butoanelor când suntem aproape de sfârșit\n  if (currentPage > 3 && totalPages > 5) {\n    let startPage = currentPage - 2;\n    if (startPage + 4 > totalPages) {\n      startPage = Math.max(1, totalPages - 4);\n    }\n    pageButtons.forEach((btn, index) => {\n      if (!btn.hidden) {\n        btn.textContent = startPage + index;\n        btn.classList.toggle('pagination--current', startPage + index === currentPage);\n      }\n    });\n  }\n}\n\nasync function onPaginationClick(event) {\n  const target = event.target;\n\n  if (target.tagName === 'BUTTON') {\n    target.blur();\n    const prevPage = currentPage;\n\n    if (target.classList.contains('pagination-button') && target.dataset.index) {\n      currentPage = Number(target.textContent);\n    } else if (target.classList.contains('arrow-right') && currentPage < totalPages) {\n      currentPage += 1;\n    } else if (target.classList.contains('arrow-left') && currentPage > 1) {\n      currentPage -= 1;\n    } else if (target.classList.contains('first-button')) {\n      currentPage = 1;\n    } else if (target.classList.contains('last-button')) {\n      currentPage = totalPages;\n    }\n\n    if (prevPage !== currentPage) {\n      window.scrollTo({ top: 0, behavior: 'smooth' });\n      \n      if (currentSearchQuery) {\n        await renderSearchedMovies(currentSearchQuery, currentPage);\n      } else {\n        await renderMovies(currentPage);\n      }\n    }\n  }\n  \n  showLoader();\n\n}\n\nfunction defineResultsPerPage() {\n  let pageSize = 20;\n  if (window.innerWidth >= 1024) {\n    pageSize = 20;\n  } else if (window.innerWidth >= 768 && window.innerWidth < 1024) {\n    pageSize = 20;\n  } else if (window.innerWidth < 768) {\n    pageSize = 20;\n  }\n  return pageSize;\n}\n\nwindow.addEventListener('resize', defineResultsPerPage);\n\nexport { \n  currentPage, \n  defineResultsPerPage, \n  updatePageButtons \n};","// Funcții pentru obținerea datelor despre filme:\n// fetchPopularMovies()\n// fetchMovieById(id)\n// searchMovies(query, page)\n\n// Funcția pentru obținerea filmelor populare\nimport { BASE_URL, API_KEY } from './config.js';\nimport { getGenres } from './genresApi.js';\nimport { currentPage } from '../components/pagination';\n\nexport async function fetchPopularMovies(page = currentPage) {\n  const validatedPage = Math.min(Math.max(1, page), 500);\n  console.log('Fetching popular movies for page:', validatedPage);\n  const apiUrl = `${BASE_URL}/movie/popular?api_key=${API_KEY}&language=en-US&page=${page}`;\n\n  try {\n    const response = await fetch(apiUrl);\n    const data = await response.json();\n\n    if (!data.results || data.results.length === 0) {\n      console.error('No popular movies found:', data);\n      return { results: [], total_pages: 0 };\n    }\n\n    const genres = await getGenres();\n    const moviesWithGenres = data.results.map(movie => ({\n      ...movie,\n      genre_names: movie.genre_ids.map(\n        id => genres.find(genre => genre.id === id)?.name || 'Unknown'\n      ),\n    }));\n\n    const total_pages = Math.min(data.total_pages, 500);\n\n    return {\n      results: moviesWithGenres,\n      total_pages,\n    };\n  } catch (error) {\n    console.error('Error fetching popular movies:', error);\n    return { results: [], total_pages: 0 };\n  }\n}\n\nexport async function searchMovies(query, page = 1) {\n  const validatedPage = Math.min(Math.max(1, page), 500);\n  const searchParams = new URLSearchParams({\n    api_key: API_KEY,\n    query: query,\n    page: page,\n    language: 'en-US',\n    include_adult: false,\n  });\n\n  const apiUrl = `${BASE_URL}/search/movie?${searchParams}`;\n\n  try {\n    const response = await fetch(apiUrl);\n    const data = await response.json();\n\n    if (!data || !data.results) {\n      return { results: [], total_pages: 0 };\n    }\n\n    const genres = await getGenres();\n    const moviesWithGenres = data.results.map(movie => ({\n      ...movie,\n      genre_names:\n        movie.genre_ids?.map(\n          id => genres.find(genre => genre.id === id)?.name || 'Unknown'\n        ) || [],\n    }));\n\n    const total_pages = Math.min(data.total_pages, 500);\n    \n    return {\n      results: moviesWithGenres,\n      total_pages: data.total_pages, // Eliminăm limitarea la 20 de pagini\n    };\n  } catch (error) {\n    console.error('Error fetching movies:', error);\n    return { results: [], total_pages: 0 };\n  }\n}\n\nexport async function fetchMovieDetails(movieId) {\n  const MOVIE_DETAIL_URL = `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}&language=en-US`;\n\n  try {\n    const response = await fetch(MOVIE_DETAIL_URL);\n    if (!response.ok) {\n      throw new Error('Failed to fetch movie details');\n    }\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error('Error fetching movie details:', error);\n    throw error;\n  }\n}\n\nexport async function fetchMovieById(id) {\n  const apiUrl = `${BASE_URL}/movie/${id}?api_key=${API_KEY}&language=en-US`;\n\n  try {\n    const response = await fetch(apiUrl);\n\n    if (!response.ok) {\n      throw new Error('Failed to fetch movie details');\n    }\n\n    const data = await response.json();\n\n    if (data.success === false) {\n      console.error('The resource you requested could not be found.');\n      return false;\n    }\n\n    return data;\n  } catch (error) {\n    console.error('Error fetching movie by Id:', error);\n    return null;\n  }\n}\n\nexport async function fetchTrailerUrl(movieId) {\n  try {\n    const response = await fetch(\n      `${BASE_URL}/movie/${movieId}/videos?api_key=${API_KEY}`\n    );\n    const data = await response.json();\n    const trailer = data.results.find(\n      video => video.type === 'Trailer' && video.site === 'YouTube'\n    );\n    return trailer ? `https://www.youtube.com/embed/${trailer.key}` : null;\n  } catch (error) {\n    console.error('Error fetching trailer URL:', error);\n    return null;\n  }\n}\n","// Configurațiile API-ului:\n// URL-ul de bază (BASE_URL)\n// Cheia API (API_KEY).\n\nexport const BASE_URL = 'https://api.themoviedb.org/3';\nexport const API_KEY = '21161239b69d8dd6ebeec5ac6086d760';\n","const formRef = document.getElementById('search-form');\nconst inputRef = document.querySelector('.form-input');\nconst gallery = document.querySelector('.movies');\nconst headerRef = document.querySelector('.header');\nconst pageHomeRef = document.querySelector('.menu__link-home');\nconst pageLabraryRef = document.querySelector('.menu__link-library');\nconst modalBackdrop = document.querySelector('.modal__backdrop');\nconst modalBox = document.getElementById('modal');\nconst headerWarning = document.querySelector('.warning-notification');\nconst pagiCont = document.querySelector('.pagination-container');\nexport {\n  formRef,\n  inputRef,\n  gallery,\n  headerRef,\n  pageHomeRef,\n  pageLabraryRef,\n  modalBackdrop,\n  modalBox,\n  headerWarning,\n  pagiCont,\n};","import { showLoader } from  './loader.js';\n\nexport function initializeTrailerModal() {\n  const trailerModalWrapper = document.getElementById(\n    'trailer-modal-container'\n  );\n  const trailerBackdrop = document.getElementById('trailer-backdrop');\n  const trailerContent = document.getElementById('trailer-content');\n\n  function openTrailerModal(trailerUrl) {\n    // Adauga iframe-ul pentru trailer\n    trailerContent.innerHTML = `\n      <iframe \n        src=\"${trailerUrl}\" \n        frameborder=\"0\" \n        allow=\"autoplay; encrypted-media\" \n        allowfullscreen>\n      </iframe>`;\n    trailerModalWrapper.classList.add('open');\n\n    showLoader();\n  }\n\n  function closeTrailerModal() {\n    trailerContent.innerHTML = ''; // Elimina iframe-ul cand se inchide modal-ul\n    trailerModalWrapper.classList.remove('open');\n  }\n\n  trailerBackdrop.addEventListener('click', closeTrailerModal);\n  document.addEventListener('keydown', e => {\n    if (e.key === 'Escape' && trailerModalWrapper.classList.contains('open')) {\n      closeTrailerModal();\n    }\n  });\n\n  return openTrailerModal;\n}\n","import { getGenres } from '../api/genresApi';\n\nexport function getFromStorage(key) {\n  return JSON.parse(localStorage.getItem(key)) || [];\n}\n\nexport function isInStorage(key, id) {\n  const items = getFromStorage(key);\n  return items.some(item => item.id === id);\n}\n\nexport async function toggleStorage(key, movie) {\n  let items = getFromStorage(key);\n\n  if (isInStorage(key, movie.id)) {\n    items = items.filter(item => item.id !== movie.id);\n  } else {\n    // Obține lista de genuri\n    const genres = await getGenres();\n\n    // Atașează genurile la film\n    const movieWithGenres = {\n      ...movie,\n      genre_names:\n        movie.genre_ids?.map(\n          id => genres.find(genre => genre.id === id)?.name || 'Unknown Genre'\n        ) || [],\n    };\n\n    items.push(movieWithGenres);\n  }\n\n  localStorage.setItem(key, JSON.stringify(items));\n}\nexport function saveToStorage(key, data) {\n  localStorage.setItem(key, JSON.stringify(data));\n}\n","import { generateMovieHTML } from './movieList';\nimport { getGenres } from '../api/genresApi'; // Importăm funcția pentru obținerea genurilor\nimport { initializeModal } from './modal';\n\nexport default async function renderLibraryList(movies) {\n  const libraryContainer = document.querySelector('.library-list');\n  libraryContainer.innerHTML = '';\n\n  if (!movies || movies.length === 0) {\n    libraryContainer.innerHTML = '<p>No movies found.</p>';\n    return;\n  }\n\n  try {\n    const genres = await getGenres(); // Obținem lista de genuri\n\n    const moviesWithGenres = movies.map(movie => ({\n      ...movie,\n      genre_names: Array.isArray(movie.genre_ids)\n        ? movie.genre_ids.map(\n            id => genres.find(genre => genre.id === id)?.name || 'Unknown Genre'\n          )\n        : [],\n    }));\n\n    let movieItems = '';\n    moviesWithGenres.forEach(movie => {\n      movieItems += generateMovieHTML(movie);\n    });\n\n    libraryContainer.innerHTML = `<ul class=\"movies\">${movieItems}</ul>`;\n\n    libraryContainer.addEventListener('click', event => {\n      const movieItem = event.target.closest('.movie_list_item');\n      if (!movieItem) return;\n\n      const movieId = movieItem.dataset.movieId;\n\n      initializeModal(movieId);\n    });\n  } catch (error) {\n    console.error('Error loading genres for library movies:', error);\n    libraryContainer.innerHTML =\n      '<p>Error loading movies. Please try again later.</p>';\n  }\n}\n","// Managing tabs between \"Watched\" and \"Queue.\"\nimport { showLoader } from  './loader.js';\n\nexport default function initLibraryTabs({\n  onWatchedTabClick,\n  onQueueTabClick,\n}) {\n  const watchedBtn = document.querySelector('#watched-btn');\n  const queueBtn = document.querySelector('#queue-btn');\n\n  watchedBtn.addEventListener('click', () => {\n    watchedBtn.classList.add('library-btn-active');\n    queueBtn.classList.remove('library-btn-active');\n    onWatchedTabClick();\n    showLoader();\n  });\n\n  queueBtn.addEventListener('click', () => {\n    queueBtn.classList.add('library-btn-active');\n    watchedBtn.classList.remove('library-btn-active');\n    onQueueTabClick();\n    showLoader();\n  });\n}\n","// Implementează logica pentru pagina „My Libraries,” care permite utilizatorilor să gestioneze și să vizualizeze filmele salvate.\n// Afișează două liste separate: „Watched” și „Queue,” utilizând componenta libraryList.js.\n// Coordonează funcționalitatea de comutare între tab-urile „Watched” și „Queue,” folosind componenta libraryTabs.js.\n// Preia filmele salvate din localStorage sau dintr-o bază de date backend, utilizând serviciul storage.js.\n// Gestionează interacțiunile utilizatorilor, precum eliminarea unui film dintr-o listă sau deschiderea modalului pentru detaliile unui film.\n\nimport { getFromStorage } from '../app/localStorage';\nimport renderLibraryList from '../components/libraryList';\nimport initLibraryTabs from '../components/libraryTabs';\n\n\nexport default function initMyLibraryPage() {\n  const libraryButtonsContainer = document.querySelector('#library-buttons');\n  libraryButtonsContainer.style.display = 'block'; // Afișează butoanele din header\n\n  // Afișează filmele din \"WATCHED\" implicit\n  renderLibraryList(getFromStorage('watched'));\n\n  // Initializează tab-urile folosind funcționalitatea butoanelor din header\n  initLibraryTabs({\n    onWatchedTabClick: () => {\n      renderLibraryList(getFromStorage('watched'));\n    },\n    onQueueTabClick: () => {\n      renderLibraryList(getFromStorage('queue'));\n    },\n  });\n}\n","// Managing the \"Add to Watch\" and \"Add to Queue\" buttons\nimport { toggleStorage, isInStorage } from '../app/localStorage';\nimport initMyLibraryPage from '../app/myLibraryPage';\nimport { showLoader } from './loader.js';\n\nconst libraryBtn = document.getElementById('library-btn');\nconst homeBtn = document.getElementById('home-btn');\nconst searchForm = document.getElementById('search-form');\nconst libraryButtons = document.getElementById('library-buttons');\nconst watchedButton = document.getElementById('watched-button');\nconst queueButton = document.getElementById('queue-button');\nconst mainGallery = document.querySelector('.gallery');\nconst libraryGallery = document.querySelector('#library-gallery');\nconst themeSwitcher = document.querySelector('.theme-switcher');\n\nlet currentPage = 'home';\n\nfunction isOnLibraryPage() {\n  return currentPage === 'library';\n}\nexport function toggleHeaderButtons() {\n  function resetActiveButtons() {\n    homeBtn.classList.remove('active');\n    libraryBtn.classList.remove('active');\n  }\n  function activateHome() {\n    currentPage = 'home';\n    searchForm.style.display = 'block';\n    libraryButtons.style.display = 'none';\n\n    mainGallery.style.display = 'block';\n    libraryGallery.style.display = 'none';\n\n\n    resetActiveButtons();\n    homeBtn.classList.add('active');\n\n\n    if (themeSwitcher) {\n      themeSwitcher.style.display = 'block';\n    }\n\n    resetActiveButtons(); \n    homeBtn.classList.add('active'); \n    showLoader();\n\n  }\n\n  function activateLibrary() {\n    currentPage = 'library';\n    searchForm.style.display = 'none';\n    libraryButtons.style.display = 'flex';\n\n    mainGallery.style.display = 'none';\n    libraryGallery.style.display = 'block';\n\n    resetActiveButtons();\n    libraryBtn.classList.add('active');\n\n    watchedButton.classList.add('library-btn-active');\n    queueButton.classList.remove('library-btn-active');\n\n    initMyLibraryPage();\n\n\n    if (themeSwitcher) {\n      themeSwitcher.style.display = 'none';\n    }\n\n    showLoader();\n\n  }\n\n  homeBtn.addEventListener('click', activateHome);\n  libraryBtn.addEventListener('click', activateLibrary);\n\n  activateHome();\n}\n\nexport function setupButtons(movie) {\n  watchedButton.textContent = isInStorage('watched', movie.id)\n    ? 'REMOVE FROM WATCHED'\n    : 'ADD TO WATCHED';\n\n  queueButton.textContent = isInStorage('queue', movie.id)\n    ? 'REMOVE FROM QUEUE'\n    : 'ADD TO QUEUE';\n\n  watchedButton.onclick = () => {\n    toggleStorage('watched', movie);\n    watchedButton.textContent = isInStorage('watched', movie.id)\n      ? 'REMOVE FROM WATCHED'\n      : 'ADD TO WATCHED';\n\n    if (isOnLibraryPage()) {\n      initMyLibraryPage();\n      showUpdateMessage();\n    }\n  };\n\n  queueButton.onclick = () => {\n    toggleStorage('queue', movie);\n    queueButton.textContent = isInStorage('queue', movie.id)\n      ? 'REMOVE FROM QUEUE'\n      : 'ADD TO QUEUE';\n\n    if (isOnLibraryPage()) {\n      initMyLibraryPage();\n      showUpdateMessage();\n    }\n  };\n}\n\nfunction showUpdateMessage() {\n  const message = document.createElement('p');\n  message.textContent = 'Library updated!';\n  message.className = 'update-message';\n  document.querySelector('#library-gallery').prepend(message);\n\n  setTimeout(() => {\n    message.remove();\n  }, 2000);\n}\n","import {\n  fetchPopularMovies,\n  fetchMovieDetails,\n  fetchTrailerUrl,\n} from '../api/moviesApi';\nimport { generateMovieHTML } from '../components/movieList';\nimport { initializeTrailerModal } from '../components/trailer';\nimport { setupButtons } from '../components/buttons';\n\nexport async function initializeModal(movieId) {\n  const modalWrapper = document.querySelector('.modal-wrapper');\n  const backdrop = document.querySelector('.backdrop');\n  const posterSection = document.getElementById('poster-section');\n  const movieTitle = document.getElementById('movie-title');\n  const movieVotes = document.getElementById('movie-votes');\n  const moviePopularity = document.getElementById('movie-popularity');\n  const originalTitle = document.getElementById('original-title');\n  const movieGenre = document.getElementById('movie-genre');\n  const movieAbout = document.getElementById('movie-about');\n  const trailerButton = document.getElementById('trailer-button');\n\n  const openTrailerModal = initializeTrailerModal();\n\n  if (!movieId) {\n    console.error('No movie ID provided!');\n    return;\n  }\n\n  try {\n    const movieDetails = await fetchMovieDetails(movieId);\n    populateModal(movieDetails);\n    openModal();\n  } catch (error) {\n    console.error('Error fetching movie details:', error);\n  }\n\n  function populateModal(data) {\n    posterSection.style.backgroundImage = `url('https://image.tmdb.org/t/p/w500/${\n      data.poster_path || ''\n    }')`;\n\n    movieTitle.textContent = data.title || 'No Title';\n\n    let ratingClass = 'movie__average--red';\n    if (data.vote_average >= 7) ratingClass = 'movie__average--green';\n    else if (data.vote_average >= 5) ratingClass = 'movie__average--orange';\n\n    const modalMovieVotes = document.querySelector('#modal-movie-votes');\n    if (modalMovieVotes) {\n      modalMovieVotes.innerHTML = `\n        <span class=\"vote-average ${ratingClass}\">\n          ${data.vote_average?.toFixed(1) || 'N/A'}\n        </span>\n        <span class=\"vote-separator\">/</span>\n        <span class=\"vote-count\">\n          ${data.vote_count || 0}\n        </span>\n      `;\n    }\n\n    moviePopularity.textContent = data.popularity?.toFixed(1) || 'N/A';\n    originalTitle.textContent = data.original_title || 'N/A';\n    movieGenre.textContent =\n      data.genres?.map(g => g.name).join(', ') || 'Unknown';\n    movieAbout.textContent = data.overview || 'No description available.';\n\n    trailerButton.onclick = () => fetchTrailer(data.id);\n    setupButtons(data);\n  }\n\n  async function fetchTrailer(movieId) {\n    try {\n      const trailerUrl = await fetchTrailerUrl(movieId);\n      if (trailerUrl) {\n        openTrailerModal(trailerUrl);\n      } else {\n        alert('Trailer not available.');\n      }\n    } catch (error) {\n      console.error('Error fetching trailer:', error);\n    }\n  }\n\n  function openModal() {\n    document.body.classList.add('modal-open');\n    modalWrapper.classList.add('open');\n\n    backdrop.addEventListener('click', closeModal);\n    document.addEventListener('keydown', handleKeydown);\n    modalWrapper.addEventListener('click', handleOutsideClick);\n  }\n\n  function closeModal() {\n    document.body.classList.remove('modal-open');\n    modalWrapper.classList.remove('open');\n\n    backdrop.removeEventListener('click', closeModal);\n    document.removeEventListener('keydown', handleKeydown);\n    modalWrapper.removeEventListener('click', handleOutsideClick);\n  }\n\n  function handleKeydown(e) {\n    if (e.key === 'Escape' && modalWrapper.classList.contains('open')) {\n      closeModal();\n    }\n  }\n\n  function handleOutsideClick(e) {\n    const modalContent = document.getElementById('movie-details');\n    if (!modalContent.contains(e.target)) {\n      closeModal();\n    }\n  }\n}\n","import { searchMovies, fetchPopularMovies } from '../api/moviesApi';\nimport { updatePageButtons, currentPage } from './pagination';\nimport { currentSearchQuery } from './searchBar';\nimport { gallery } from './refs';\nimport { initializeModal } from '../components/modal';\nimport { showLoader } from  './loader.js';\n\nexport function generateMovieHTML(movie) {\n  let ratingClass = 'movie__average--red';\n  if (movie.vote_average >= 7) ratingClass = 'movie__average--green';\n  else if (movie.vote_average >= 5) ratingClass = 'movie__average--orange';\n\n  const moviePoster = movie.poster_path\n    ? `https://image.tmdb.org/t/p/w500${movie.poster_path}`\n    : './images/no-image-available.jpg';\n\n  const altText = movie.poster_path\n    ? `${movie.title || ''} movie poster`\n    : 'No poster available';\n\n  const genresArray = movie.genre_names || [];\n  let displayedGenres = genresArray.slice(0, 2);\n  if (genresArray.length > 2) {\n    displayedGenres.push('Other');\n  }\n\n  const genres = genresArray.length > 0 ? displayedGenres.join(', ') : '';\n  const rating =\n    movie.vote_average !== undefined ? movie.vote_average.toFixed(1) : '';\n  const releaseYear = movie.release_date\n    ? new Date(movie.release_date).getFullYear()\n    : '';\n\n  return `\n    <li class=\"movie_list_item\" data-movie-id=\"${movie.id || ''}\">\n      <div class=\"movie__cover-inner\">\n        <img \n          class=\"movie__cover\" \n          src=\"${moviePoster}\" \n          alt=\"${altText}\" \n        />\n      </div>\n      <div class=\"movie__cover--darkened\"></div>\n      <div class=\"movie-info\">\n        ${movie.title ? `<h3 class=\"movie-title\">${movie.title}</h3>` : ''}\n        ${\n          genres || releaseYear\n            ? `<p class=\"movie-date\">${[genres, releaseYear]\n                .filter(Boolean)\n                .join(' | ')}</p>`\n            : ''\n        }\n        ${\n          rating\n            ? `<div class=\"movie__average ${ratingClass}\">${rating}</div>`\n            : ''\n        }\n      </div>\n    </li>\n  `;\n}\n\nfunction getMoviesPerPage() {\n  const width = window.innerWidth;\n  if (width >= 1024) return 18;\n  if (width >= 768) return 18;\n  return 18;\n}\n\nexport async function renderSearchedMovies(query, page) {\n  try {\n    const { results, total_pages } = await searchMovies(query, page);\n\n    if (!results || results.length === 0) {\n      gallery.innerHTML = '<p>No movies found.</p>';\n      updatePageButtons(0); // Hide pagination when no results\n      return;\n    }\n\n    const moviesPerPage = getMoviesPerPage();\n    const moviesToShow = results.slice(0, moviesPerPage);\n    const moviesHTML = moviesToShow.map(generateMovieHTML).join('');\n    gallery.innerHTML = moviesHTML;\n\n    // Update pagination with the actual number of pages from search results\n    updatePageButtons(total_pages);\n  } catch (error) {\n    console.error('Error displaying searched movies:', error);\n    gallery.innerHTML = '<p>Error loading movies.</p>';\n    updatePageButtons(0);\n  }\n}\nexport async function renderMovies(page = 1) {\n  console.log('Rendering movies for page:', page);\n  try {\n    const { results, total_pages } = await fetchPopularMovies(page);\n\n    if (!results || results.length === 0) {\n      console.warn('No movies found');\n      gallery.innerHTML = '<p>No movies found.</p>';\n      updatePageButtons(0);\n      return;\n    }\n\n    console.log('Movies fetched:', results.length);\n    const moviesPerPage = getMoviesPerPage();\n    const moviesToShow = results.slice(0, moviesPerPage);\n    const moviesHTML = moviesToShow.map(generateMovieHTML).join('');\n\n    if (gallery) {\n      gallery.innerHTML = moviesHTML;\n      updatePageButtons(total_pages);\n\n      gallery.addEventListener('click', event => {\n        const movieItem = event.target.closest('.movie_list_item');\n        if (!movieItem) return;\n\n        const movieId = movieItem.dataset.movieId;\n        if (movieId) {\n          console.log('Clicked movie ID:', movieId);\n          initializeModal(movieId);\n          showLoader();\n        } else {\n          console.error('Movie ID not found in clicked item');\n        }\n      });\n    } else {\n      console.error('Gallery element not found');\n    }\n  } catch (error) {\n    console.error('Error displaying movies:', error);\n    if (gallery) {\n      gallery.innerHTML = '<p>Error loading movies.</p>';\n    }\n    updatePageButtons(0);\n  }\n}\n\n// Add resize listener to handle responsive layout\nwindow.addEventListener('resize', () => {\n  if (gallery.children.length > 0) {\n    // Re-render current page when window is resized\n    if (currentSearchQuery) {\n      renderSearchedMovies(currentSearchQuery, currentPage);\n    } else {\n      renderMovies(currentPage);\n    }\n  }\n});\n","// Gestionează funcționalitatea de căutare a filmelor și afișarea rezultatelor căutării\n// nclude logica pentru manipularea inputului utilizatorului în bara de căutare, utilizând componenta searchBar.js.\n// Realizează cereri către API pentru a obține rezultatele căutării pe baza cuvintelor cheie introduse de utilizator.\n// Afișează rezultatele folosind componenta movieList.js și oferă paginare pentru navigarea prin rezultate.\n// Gestionează erorile sau rezultatele goale pentru a îmbunătăți experiența utilizatorului.\n\nimport { generateMovieHTML } from '../components/movieList.js';\nimport { getGenres } from '../api/genresApi';\nimport { searchMovies } from '../api/moviesApi';\n\n// filme gasite prin search\nexport async function renderSearchedMovies(query, page) {\n  const galleryElement = document.querySelector('.movies');\n  const errorElement = document.querySelector('#search-error');\n\n  try {\n    console.log('Apelare la funcția renderSearchedMovies...');\n    const moviesData = await searchMovies(query, page);\n\n    const movies = moviesData?.results || [];\n\n    if (!Array.isArray(movies) || movies.length === 0) {\n      console.warn('No movies found.');\n      errorElement.style.display = 'block';\n      galleryElement.innerHTML = `\n        <p class=\"error-message\" style=\"text-align: center; font-size: 18px; color: red;\">\n          No movies found. Please try a different search term.\n        </p>\n      `;\n      return;\n    }\n\n    const genres = await getGenres();\n\n    const moviesWithGenres = movies.map(movie => ({\n      ...movie,\n      genre_names: Array.isArray(movie.genre_ids)\n        ? movie.genre_ids.map(\n            id => genres.find(genre => genre.id === id)?.name || 'Unknown Genre'\n          )\n        : [],\n    }));\n\n    errorElement.style.display = 'none';\n\n    const moviesHTML = moviesWithGenres.map(generateMovieHTML).join('');\n    galleryElement.innerHTML = moviesHTML;\n  } catch (error) {\n    console.error('Eroare la afișarea filmelor:', error);\n    errorElement.style.display = 'block';\n    galleryElement.innerHTML = `\n      <p class=\"error-message\" style=\"text-align: center; font-size: 18px; color: red;\">\n        Error loading movies. Please try again later.\n      </p>\n    `;\n  }\n}\n","// Logic for the search bar (including input events)\nimport { renderSearchedMovies } from '../app/searchPage';\nimport { showLoader } from './loader';\n\nconst searchText = document.querySelector('.search');\nconst searchButton = document.querySelector('.search-button');\nconst loader = document.querySelector('.loader');\n\nexport let currentSearchQuery = ''; \n\n// Event listener pentru butonul de căutare\nsearchButton.addEventListener('click', function (e) {\n  e.preventDefault();\n  const page = 1;\n  const query = searchText.value.trim();\n\n  if (query === '') return;\n\n  currentSearchQuery = query; \n  showLoader();\n  renderSearchedMovies(query, page).finally(() => {\n    loader.classList.remove('show');\n  });\n\n  searchText.value = '';\n\n  showLoader();\n});\n\n// Event listener pentru tasta Enter\nsearchText.addEventListener('keydown', function (e) {\n  if (e.key === 'Enter') {\n    e.preventDefault();\n    const page = 1;\n    const query = searchText.value.trim();\n\n    if (query === '') return;\n\n    currentSearchQuery = query; \n    showLoader();\n    renderSearchedMovies(query, page).finally(() => {\n      loader.classList.remove('show');\n    });\n\n    searchText.value = '';\n  }\n});\n","// This function initializes the horizontal progress indicator,\n// updating its width as the user scrolls.\n\nexport function initProgressIndicator() {\n  window.onscroll = function () {\n    const winScroll =\n      document.body.scrollTop || document.documentElement.scrollTop;\n    const height =\n      document.documentElement.scrollHeight -\n      document.documentElement.clientHeight;\n    const scrolled = (winScroll / height) * 100;\n    document.getElementById('progressBar').style.width = scrolled + '%';\n  };\n}\n\n// This function initializes the \"Back to Top\" button,\n// toggling its visibility based on the scroll position\n// and enabling smooth scrolling back to the top when clicked.\n\nexport function initBackToTopButton() {\n  const toggleHeight = window.outerHeight * 1.2;\n  const backToTopButton = document.getElementById('backToTopButton');\n\n  window.addEventListener('scroll', () => {\n    if (document.documentElement.scrollTop > toggleHeight) {\n      backToTopButton.classList.add('active');\n    } else {\n      backToTopButton.classList.remove('active');\n    }\n  });\n\n  backToTopButton.addEventListener('click', () => {\n    window.scrollTo({\n      top: 0,\n      behavior: 'smooth',\n    });\n  });\n}\n","// This function initializes the theme switcher functionality, \n// applying the saved theme and handling theme toggling.\n\nexport function initThemeSwitcher() {\n  const themeSwitcherCheckbox = document.getElementById(\n    'themeSwitcherCheckbox'\n  );\n\n  let currentTheme = localStorage.getItem('theme');\n\n  if (!currentTheme) {\n    currentTheme = 'light';\n    localStorage.setItem('theme', currentTheme);\n  }\n\n  document.body.classList.add(`${currentTheme}-theme`);\n  themeSwitcherCheckbox.checked = currentTheme === 'dark';\n\n  themeSwitcherCheckbox.addEventListener('change', () => {\n    const isDarkTheme = themeSwitcherCheckbox.checked;\n\n    document.body.classList.toggle('light-theme', !isDarkTheme);\n    document.body.classList.toggle('dark-theme', isDarkTheme);\n\n    localStorage.setItem('theme', isDarkTheme ? 'dark' : 'light');\n  });\n}\n","import './sass/index.scss';\nimport './sass/_pagination.scss';\n\nimport './js/components/searchBar';\n\nimport './js/components/loader';\nimport { showLoader } from './js/components/loader.js';\n\nimport { renderMovies } from './js/components/movieList.js';\nimport './js/components/pagination.js';\nimport { toggleHeaderButtons } from './js/components/buttons.js';\nimport {\n  initProgressIndicator,\n  initBackToTopButton,\n} from './js/components/circle-up.js';\nimport { initThemeSwitcher } from './js/components/themeSwitcher.js';\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  initThemeSwitcher();\n  showLoader();\n  renderMovies();\n  toggleHeaderButtons();\n  initProgressIndicator();\n  initBackToTopButton();\n});\n"],"names":["$cb5bb855f2146911$var$genresCache","async","$cb5bb855f2146911$export$c5604fa8028da00","length","response","fetch","data","json","genres","error","console","$cb5bb855f2146911$export$e95d448b93b2cdb","$770740dca78365cc$var$loader","document","querySelector","$770740dca78365cc$export$56525cbb1fcd885c","classList","add","setTimeout","remove","getElementById","addEventListener","$89f896eead6f17ea$var$btn1Ref","$89f896eead6f17ea$var$btn2Ref","$89f896eead6f17ea$var$btn3Ref","$89f896eead6f17ea$var$btn4Ref","$89f896eead6f17ea$var$btn5Ref","$89f896eead6f17ea$var$firstPageRef","$89f896eead6f17ea$var$lastPageRef","$89f896eead6f17ea$var$paginationRef","$89f896eead6f17ea$var$rightArrowRef","$89f896eead6f17ea$var$leftArrowRef","$89f896eead6f17ea$var$prevDotsRef","$89f896eead6f17ea$var$afterDotsRef","$89f896eead6f17ea$export$385972cd6b54c3e1","$89f896eead6f17ea$var$totalPages","$89f896eead6f17ea$export$82fb4acf7de09014","total","style","display","pageButtons","forEach","btn","hidden","visibleButtons","Math","min","i","textContent","toggle","startPage","max","index","$93295c8431c78407$export$225b489b0d997c20","page","validatedPage","log","apiUrl","results","total_pages","moviesWithGenres","map","movie","genre_names","genre_ids","id","find","genre","name","$93295c8431c78407$export$b0c4d3ac9887d994","query","URLSearchParams","api_key","language","include_adult","$93295c8431c78407$export$a199ce1860fbd5cd","movieId","MOVIE_DETAIL_URL","ok","Error","$93295c8431c78407$export$95d25a3e459db988","trailer","video","type","site","key","event","target","tagName","blur","prevPage","contains","dataset","Number","window","scrollTo","top","behavior","$7a61c8decd4d727f$export$a3e10a4909eb3219","$18703c3ad17f34d6$export$ed513bafb229402d","$18703c3ad17f34d6$export$1a30573fde3dfc62","pageSize","innerWidth","$b5a1802b03d58e34$export$b21c1b4271bdbe93","$1ba3e3127818fd45$export$710d652e87bebf6a","trailerModalWrapper","trailerBackdrop","trailerContent","closeTrailerModal","innerHTML","e","trailerUrl","$8e6b099802297ef3$export$e4c9b9bae9539063","JSON","parse","localStorage","getItem","$8e6b099802297ef3$export$35f3dfcec2dbf042","some","item","$8e6b099802297ef3$export$5894ad57f1a6e020","items","filter","movieWithGenres","push","setItem","stringify","$f0388fe0d259efd2$export$2e2bcd8739ae039","movies","libraryContainer","Array","isArray","movieItems","$18703c3ad17f34d6$export$53da6709e29add30","movieItem","closest","$65a0cd66e497f444$export$aa9b0c0080dbe389","$823326855ea10d22$export$2e2bcd8739ae039","onWatchedTabClick","onQueueTabClick","watchedBtn","queueBtn","$0d675c4e5416b878$export$2e2bcd8739ae039","$63e0eb7203c7b511$var$libraryBtn","$63e0eb7203c7b511$var$homeBtn","$63e0eb7203c7b511$var$searchForm","$63e0eb7203c7b511$var$libraryButtons","$63e0eb7203c7b511$var$watchedButton","$63e0eb7203c7b511$var$queueButton","$63e0eb7203c7b511$var$mainGallery","$63e0eb7203c7b511$var$libraryGallery","$63e0eb7203c7b511$var$themeSwitcher","$63e0eb7203c7b511$var$currentPage","$63e0eb7203c7b511$var$isOnLibraryPage","$63e0eb7203c7b511$export$c13b0b1659cdb1bd","resetActiveButtons","activateHome","$63e0eb7203c7b511$export$c47022e4403e80f6","onclick","$63e0eb7203c7b511$var$showUpdateMessage","message","createElement","className","prepend","movieId1","modalWrapper","backdrop","posterSection","movieTitle","moviePopularity","originalTitle","movieGenre","movieAbout","trailerButton","openTrailerModal","backgroundImage","poster_path","title","ratingClass","vote_average","modalMovieVotes","toFixed","vote_count","popularity","original_title","g","join","overview","alert","fetchTrailer","populateModal","body","closeModal","handleKeydown","handleOutsideClick","error1","removeEventListener","moviePoster","altText","genresArray","displayedGenres","slice","rating","undefined","releaseYear","release_date","Date","getFullYear","Boolean","$18703c3ad17f34d6$var$getMoviesPerPage","moviesPerPage","moviesHTML","warn","$67c7bf5189e612b6$export$ed513bafb229402d","galleryElement","errorElement","children","$7a61c8decd4d727f$var$searchText","$7a61c8decd4d727f$var$searchButton","$7a61c8decd4d727f$var$loader","$0ab521382d3b3c1c$export$38ec363659cb303e","toggleHeight","outerHeight","backToTopButton","documentElement","scrollTop","$b2b36ca342073935$export$c99801a3030a4874","themeSwitcherCheckbox","currentTheme","checked","isDarkTheme","preventDefault","value","trim","finally","onscroll","scrolled","scrollHeight","clientHeight","width"],"version":3,"file":"index.61487948.js.map"}
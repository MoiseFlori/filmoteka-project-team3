{"mappings":"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","sources":["src/js/api/genresApi.js","src/js/components/refs.js","src/js/components/pagination.js","src/js/api/moviesApi.js","src/js/api/config.js","src/js/components/movieList.js","src/js/app/searchPage.js","src/js/components/searchBar.js","src/js/components/trailer.js","src/js/app/localStorage.js","src/js/components/buttons.js","src/js/components/modal.js","src/index.js"],"sourcesContent":["import { BASE_URL, API_KEY } from './config.js';\n\nlet genresCache = []; \n\nexport async function fetchGenres() {\n  const apiUrl = `${BASE_URL}/genre/movie/list?api_key=${API_KEY}&language=en-US`;\n\n  try {\n    const response = await fetch(apiUrl);\n    const data = await response.json();\n\n    if (data.genres) {\n      genresCache = data.genres; \n    }\n\n    return genresCache;\n  } catch (error) {\n    console.error('Eroare la încărcarea genurilor:', error);\n    return [];\n  }\n}\n\nexport async function getGenres() {\n  if (genresCache.length === 0) {\n    await fetchGenres();\n  }\n  return genresCache;\n}\n","const formRef = document.getElementById('search-form');\nconst inputRef = document.querySelector('.form-input');\nconst gallery = document.querySelector('.movies');\nconst headerRef = document.querySelector('.header');\nconst pageHomeRef = document.querySelector('.menu__link-home');\nconst pageLabraryRef = document.querySelector('.menu__link-library');\nconst modalBackdrop = document.querySelector('.modal__backdrop');\nconst modalBox = document.getElementById('modal');\nconst headerWarning = document.querySelector('.warning-notification');\nconst pagiCont = document.querySelector('.pagination-container');\nexport {\n  formRef,\n  inputRef,\n  gallery,\n  headerRef,\n  pageHomeRef,\n  pageLabraryRef,\n  modalBackdrop,\n  modalBox,\n  headerWarning,\n  pagiCont,\n};","// Generating and managing pagination functionality.\n\nimport { renderMovies } from './movieList';\nimport { gallery } from './refs';\n\n\nconst btn1Ref = document.querySelector('[data-index=\"1\"]');\nconst btn2Ref = document.querySelector('[data-index=\"2\"]');\nconst btn3Ref = document.querySelector('[data-index=\"3\"]');\nconst btn4Ref = document.querySelector('[data-index=\"4\"]');\nconst btn5Ref = document.querySelector('[data-index=\"5\"]');\nconst firstPageRef = document.querySelector('.first-button');\nconst lastPageRef = document.querySelector('.last-button');\nconst paginationRef = document.querySelector('.pagination-container');\nconst rightArrowRef = document.querySelector('.arrow-right');\nconst leftArrowRef = document.querySelector('.arrow-left');\nconst prevDotsRef = document.querySelector('#previous');\nconst afterDotsRef = document.querySelector('#after');\n\npaginationRef.addEventListener('click', onPaginationClick);\n\nlet currentPage = 1;\n\nlet btns = document.querySelectorAll('.pagination-button');\n\nprevDotsRef.hidden = true;\nleftArrowRef.hidden = true;\nfirstPageRef.hidden = true;\n\nfunction onPaginationClick(event) {\n  if (event.target.tagName === 'BUTTON') {\n    if (Number(event.target.textContent)) {\n      currentPage = Number(event.target.textContent);\n    }\n\n    prevDotsRef.hidden = true;\n    afterDotsRef.hidden = true;\n\n    if (event.target.classList.contains('pagination-button')) {\n      btns.forEach(el => el.classList.remove('pagination--current'));\n      event.target.classList.add('pagination--current');\n    }\n\n    if (event.target.classList.contains('arrow-right') && currentPage < 20) {\n      btns.forEach(el => el.classList.remove('pagination--current'));\n      btn1Ref.classList.add('pagination--current');\n      btn1Ref.textContent = Number(btn1Ref.textContent) + 5;\n      btn2Ref.textContent = Number(btn2Ref.textContent) + 5;\n      btn3Ref.textContent = Number(btn3Ref.textContent) + 5;\n      btn4Ref.textContent = Number(btn4Ref.textContent) + 5;\n      btn5Ref.textContent = Number(btn5Ref.textContent) + 5;\n      currentPage = btn1Ref.textContent;\n    }\n\n    if (event.target.classList.contains('arrow-left') && currentPage >= 5) {\n      btns.forEach(el => el.classList.remove('pagination--current'));\n      btn1Ref.textContent = Number(btn1Ref.textContent) - 5;\n      btn2Ref.textContent = Number(btn2Ref.textContent) - 5;\n      btn3Ref.textContent = Number(btn3Ref.textContent) - 5;\n      btn4Ref.textContent = Number(btn4Ref.textContent) - 5;\n      btn5Ref.textContent = Number(btn5Ref.textContent) - 5;\n      btn5Ref.classList.add('pagination--current');\n      currentPage = btn5Ref.textContent;\n    }\n\n    if (event.target.classList.contains('first-button')) {\n      btns.forEach(el => el.classList.remove('pagination--current'));\n      btn1Ref.textContent = 1;\n      btn2Ref.textContent = 2;\n      btn3Ref.textContent = 3;\n      btn4Ref.textContent = 4;\n      btn5Ref.textContent = 5;\n      btn1Ref.classList.add('pagination--current');\n      currentPage = btn1Ref.textContent;\n      leftArrowRef.hidden = true;\n      prevDotsRef.hidden = true;\n      firstPageRef.hidden = true;\n    }\n\n    if (event.target.classList.contains('last-button')) {\n      btns.forEach(el => el.classList.remove('pagination--current'));\n      btn1Ref.textContent = Number(lastPageRef.textContent) - 4;\n      btn2Ref.textContent = Number(lastPageRef.textContent) - 3;\n      btn3Ref.textContent = Number(lastPageRef.textContent) - 2;\n      btn4Ref.textContent = Number(lastPageRef.textContent) - 1;\n      btn5Ref.textContent = lastPageRef.textContent;\n      btn5Ref.classList.add('pagination--current');\n      currentPage = btn5Ref.textContent;\n      rightArrowRef.hidden = true;\n      afterDotsRef.hidden = true;\n      lastPageRef.hidden = true;\n    }\n\n    if (Number(currentPage) > 5) {\n      leftArrowRef.hidden = false;\n      prevDotsRef.hidden = false;\n      firstPageRef.hidden = false;\n    } else {\n      leftArrowRef.hidden = true;\n      prevDotsRef.hidden = true;\n      firstPageRef.hidden = true;\n    }\n\n    if (Number(currentPage) < 16) {\n      rightArrowRef.hidden = false;\n      afterDotsRef.hidden = false;\n      lastPageRef.hidden = false;\n    }\n\n    gallery.innerHTML = '';\n    window.scrollTo({ top: 0, behavior: 'smooth' });\n\n    // if (inputRef?.value !== '') {\n    //   movieSearcher(inputRef.value, currentPage);\n    // } else {\n    //   startPage();\n    // }\n    renderMovies();\n  }\n}\n\nlet pageSize = 9;\n\nfunction defineResultsPerPage() {\n  if (window.innerWidth >= 1024) {\n    pageSize = 9;\n  } else if (window.innerWidth >= 768 && window.innerWidth < 1024) {\n    pageSize = 8;\n  } else if (window.innerWidth < 768) {\n    pageSize = 4;\n  }\n  return pageSize;\n}\n\nconst secret = {\n  r: 'goit',\n  e: 'go it',\n}\n\nexport { currentPage, defineResultsPerPage, secret };\n\nfunction updatePageButtons() {\n  const totalPages = 20; // Numărul total de pagini\n  let startPage = currentPage - 2; // Calculează prima pagină vizibilă\n  let endPage = currentPage + 2;   // Calculează ultima pagină vizibilă\n\n  // Ajustează valorile dacă suntem aproape de început sau de sfârșit\n  if (startPage < 1) {\n    startPage = 1;\n    endPage = Math.min(5, totalPages); // Arată primele 5 pagini\n  }\n  if (endPage > totalPages) {\n    endPage = totalPages;\n    startPage = Math.max(totalPages - 4, 1); // Arată ultimele 5 pagini\n  }\n\n  // Actualizează textul butoanelor\n  const pageButtons = [btn1Ref, btn2Ref, btn3Ref, btn4Ref, btn5Ref];\n  pageButtons.forEach((btn, index) => {\n    const pageNumber = startPage + index;\n    btn.textContent = pageNumber;\n    btn.classList.toggle('pagination--current', pageNumber == currentPage);\n  });\n\n  // Afișează sau ascunde punctele și săgețile\n  firstPageRef.hidden = currentPage <= 3;\n  leftArrowRef.hidden = currentPage <= 1;\n  rightArrowRef.hidden = currentPage >= totalPages;\n  lastPageRef.hidden = currentPage >= totalPages - 2;\n  prevDotsRef.hidden = startPage <= 1;\n  afterDotsRef.hidden = endPage >= totalPages;\n}\n\nfunction onPaginationClick(event) {\n  const target = event.target;\n\n  if (target.tagName === 'BUTTON') {\n    // Elimină focusul de pe butonul curent\n    target.blur();\n    if (target.classList.contains('pagination-button') && target.dataset.index) {\n      currentPage = Number(target.textContent);\n    } else if (target.classList.contains('arrow-right') && currentPage < 20) {\n      currentPage += 1;\n    } else if (target.classList.contains('arrow-left') && currentPage > 1) {\n      currentPage -= 1;\n    } else if (target.classList.contains('first-button')) {\n      currentPage = 1;\n    } else if (target.classList.contains('last-button')) {\n      currentPage = 20;\n    }\n\n    updatePageButtons();\n\n    gallery.innerHTML = '';\n    window.scrollTo({ top: 0, behavior: 'smooth' });\n    renderMovies();\n  }\n}\n","// Funcții pentru obținerea datelor despre filme:\n// fetchPopularMovies()\n// fetchMovieById(id)\n// searchMovies(query, page)\n\n// Funcția pentru obținerea filmelor populare\nimport { BASE_URL, API_KEY } from './config.js';\nimport { getGenres } from './genresApi.js';\nimport { currentPage } from '../components/pagination';\n\nexport async function fetchPopularMovies() {\n  const apiUrl = `${BASE_URL}/movie/popular?api_key=${API_KEY}&language=en-US&page=${currentPage}`;\n\n  try {\n    // console.log('Fetching popular movies...');\n    const response = await fetch(apiUrl);\n    const data = await response.json();\n\n    // console.log(data);\n\n    if (!data.results || data.results.length === 0) {\n      console.error('No popular movies found:', data);\n      return [];\n    }\n\n    const genres = await getGenres();\n    // console.log('Genres retrieved:', genres);\n\n    const moviesWithGenres = data.results.map(movie => ({\n      ...movie,\n      genre_names: movie.genre_ids.map(\n        id => genres.find(genre => genre.id === id)?.name || 'Unknown'\n      ),\n    }));\n\n    // console.log('Movies with genres:', moviesWithGenres);\n    return moviesWithGenres;\n  } catch (error) {\n    console.error('Error fetching popular movies:', error);\n    return [];\n  }\n}\n\nexport async function fetchMovieDetails(movieId) {\n  const MOVIE_DETAIL_URL = `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}&language=en-US`;\n\n  try {\n    console.log(`Fetching details for movie ID: ${movieId}`);\n    const response = await fetch(MOVIE_DETAIL_URL);\n    if (!response.ok) {\n      throw new Error('Failed to fetch movie details');\n    }\n    const data = await response.json();\n    console.log('Movie details fetched:', data);\n    return data;\n  } catch (error) {\n    console.error('Error fetching movie details:', error);\n    throw error;\n  }\n}\n\nexport async function searchMovies(query, page) {\n  const searchParams = new URLSearchParams({\n    api_key: API_KEY,\n    query: query,\n    page: page,\n    language: 'en-US',\n    include_adult: false,\n  });\n\n  const apiUrl = `${BASE_URL}/search/movie?${searchParams}`;\n\n  try {\n    console.log(`searchMovies(${query},${page}) with URL: ${apiUrl}`);\n    const response = await fetch(apiUrl);\n    const data = await response.json();\n\n    if (!data || !data.results) {\n      console.warn('Invalid response or no results.');\n      return { results: [] }; // Returnăm un obiect gol\n    }\n\n    return data; // Returnează datele corect\n  } catch (error) {\n    console.error('Error fetching movies:', error);\n    return { results: [] }; // Returnează un fallback\n  }\n}\n\n// export async function fetchMovieById(id)\n\nexport async function fetchMovieById(id) {\n  const apiUrl = `${BASE_URL}/movie/${id}?api_key=${API_KEY}&language=en-US&page=1`;\n\n  try {\n    console.log(`fetchMovieById(${id}) with URL: ${apiUrl}`);\n    const response = await fetch(apiUrl);\n\n    if (!response.ok) {\n      throw new Error('Failed to fetch movie details');\n    }\n\n    const data = await response.json();\n\n    if (data.success === false) {\n      console.error('The resource you requested could not be found.');\n      return false;\n    }\n\n    return data;\n  } catch (error) {\n    console.error('Error fetching movie by Id:', error);\n    return [];\n  }\n}\n\nexport async function fetchTrailerUrl(movieId) {\n  try {\n    const response = await fetch(\n      `https://api.themoviedb.org/3/movie/${movieId}/videos?api_key=${API_KEY}`\n    );\n    const data = await response.json();\n    const trailer = data.results.find(\n      video => video.type === 'Trailer' && video.site === 'YouTube'\n    );\n    return trailer ? `https://www.youtube.com/embed/${trailer.key}` : null;\n  } catch (error) {\n    console.error('Error fetching trailer URL:', error);\n    return null;\n  }\n}\n","// Configurațiile API-ului:\n// URL-ul de bază (BASE_URL)\n// Cheia API (API_KEY).\n\nexport const BASE_URL = 'https://api.themoviedb.org/3';\nexport const API_KEY = '21161239b69d8dd6ebeec5ac6086d760';\n","// Generating and displaying the list of movies.\n\nimport { fetchPopularMovies } from '../api/moviesApi';\nimport { defineResultsPerPage } from '../components/pagination';\n\nexport function generateMovieHTML(movie) {\n  let ratingClass = 'movie__average--red';\n  if (movie.vote_average >= 7) ratingClass = 'movie__average--green';\n  else if (movie.vote_average >= 5) ratingClass = 'movie__average--orange';\n\n  const moviePoster = movie.poster_path\n    ? `https://image.tmdb.org/t/p/w500${movie.poster_path}`\n    : './images/no-image-available.jpg';\n\n  const altText = movie.poster_path\n    ? `${movie.title || ''} movie poster`\n    : 'No poster available';\n\n  const genresArray = movie.genre_names || [];\n  let displayedGenres = genresArray.slice(0, 2);\n  if (genresArray.length > 2) {\n    displayedGenres.push('Other');\n  }\n\n  const genres = genresArray.length > 0 ? displayedGenres.join(', ') : '';\n\n  const rating =\n    movie.vote_average !== undefined ? movie.vote_average.toFixed(1) : '';\n\n  const releaseYear = movie.release_date\n    ? new Date(movie.release_date).getFullYear()\n    : '';\n\n  return `\n    <li class=\"movie_list_item\" data-movie-id=\"${movie.id || ''}\">\n      <div class=\"movie__cover-inner\">\n        <img \n          class=\"movie__cover\" \n          src=\"${moviePoster}\" \n          alt=\"${altText}\" \n        />\n      </div>\n      <div class=\"movie__cover--darkened\"></div>\n      <div class=\"movie-info\">\n        ${movie.title ? `<h3 class=\"movie-title\">${movie.title}</h3>` : ''}\n        ${\n          genres || releaseYear\n            ? `<p class=\"movie-date\">${[genres, releaseYear]\n                .filter(Boolean)\n                .join(' | ')}</p>`\n            : ''\n        }\n        ${\n          rating\n            ? `<div class=\"movie__average ${ratingClass}\">${rating}</div>`\n            : ''\n        }\n      </div>\n    </li>\n  `;\n}\n\n// Funcția pentru afișarea filmelor\nexport async function renderMovies() {\n  try {\n    // console.log('page', currentPage);\n    // console.log('Apelare la funcția renderMovies...');\n    const movies = await fetchPopularMovies();\n    const galleryElement = document.querySelector('.movies');\n\n    if (!movies || movies.length === 0) {\n      console.error('Niciun film pentru afișare.');\n      galleryElement.innerHTML = '<p>No movies found.</p>';\n      return;\n    }\n\n    const perPage = defineResultsPerPage();\n\n    const moviesHTML = movies.slice(0, perPage).map(generateMovieHTML).join('');\n    // console.log('HTML-ul generat pentru filme:', moviesHTML);\n    galleryElement.innerHTML = moviesHTML;\n  } catch (error) {\n    console.error('Eroare la afișarea filmelor:', error);\n    document.querySelector('.movies').innerHTML =\n      '<p>Error loading movies.</p>';\n  }\n}\n","// Gestionează funcționalitatea de căutare a filmelor și afișarea rezultatelor căutării\n// nclude logica pentru manipularea inputului utilizatorului în bara de căutare, utilizând componenta searchBar.js.\n// Realizează cereri către API pentru a obține rezultatele căutării pe baza cuvintelor cheie introduse de utilizator.\n// Afișează rezultatele folosind componenta movieList.js și oferă paginare pentru navigarea prin rezultate.\n// Gestionează erorile sau rezultatele goale pentru a îmbunătăți experiența utilizatorului.\n\nimport { generateMovieHTML } from '../components/movieList.js';\nimport { getGenres } from '../api/genresApi';\nimport { searchMovies } from '../api/moviesApi';\n\n\n// filme gasite prin search\nexport async function renderSearchedMovies(query, page) {\n  const galleryElement = document.querySelector('.movies');\n  const errorElement = document.querySelector('#search-error');\n\n  try {\n    console.log('Apelare la funcția renderSearchedMovies...');\n    const moviesData = await searchMovies(query, page);\n\n   \n    const movies = moviesData?.results || [];\n\n    if (!Array.isArray(movies) || movies.length === 0) {\n      console.warn('No movies found.');\n      errorElement.style.display = 'block';\n      galleryElement.innerHTML = `\n        <p class=\"error-message\" style=\"text-align: center; font-size: 18px; color: red;\">\n          No movies found. Please try a different search term.\n        </p>\n      `;\n      return;\n    }\n\n \n    const genres = await getGenres();\n\n \n    const moviesWithGenres = movies.map(movie => ({\n      ...movie,\n      genre_names: Array.isArray(movie.genre_ids)\n        ? movie.genre_ids.map(\n            id => genres.find(genre => genre.id === id)?.name || 'Unknown Genre'\n          )\n        : [], \n    }));\n\n \n    errorElement.style.display = 'none';\n\n\n    const moviesHTML = moviesWithGenres.map(generateMovieHTML).join('');\n    galleryElement.innerHTML = moviesHTML;\n  } catch (error) {\n    console.error('Eroare la afișarea filmelor:', error);\n    errorElement.style.display = 'block';\n    galleryElement.innerHTML = `\n      <p class=\"error-message\" style=\"text-align: center; font-size: 18px; color: red;\">\n        Error loading movies. Please try again later.\n      </p>\n    `;\n  }\n}\n","// Logic for the search bar (including input events)\n\nconst searchText = document.querySelector('.search');\nconst searchButton = document.querySelector('.search-button');\n\nimport { renderSearchedMovies } from '../app/searchPage';\n\n// Event listener pentru butonul de cautare\nsearchButton.addEventListener('click', function (e) {\n  e.preventDefault();\n  const page = 1;\n  if (searchText.value.trim() === '') return; \n  renderSearchedMovies(searchText.value.trim(), page);\n  searchText.value = '';\n});\n\n// Event listener pentru tasta Enter\nsearchText.addEventListener('keydown', function (e) {\n  if (e.key === 'Enter') {\n    e.preventDefault();\n    const page = 1;\n    if (searchText.value.trim() === '') return; \n    renderSearchedMovies(searchText.value.trim(), page);\n    searchText.value = '';\n  }\n});\n","export function initializeTrailerModal() {\n  const trailerModalWrapper = document.getElementById(\n    'trailer-modal-container'\n  );\n  const trailerBackdrop = document.getElementById('trailer-backdrop');\n  const trailerContent = document.getElementById('trailer-content');\n\n  function openTrailerModal(trailerUrl) {\n    // Adauga iframe-ul pentru trailer\n    trailerContent.innerHTML = `\n      <iframe \n        src=\"${trailerUrl}\" \n        frameborder=\"0\" \n        allow=\"autoplay; encrypted-media\" \n        allowfullscreen>\n      </iframe>`;\n    trailerModalWrapper.classList.add('open');\n  }\n\n  function closeTrailerModal() {\n    trailerContent.innerHTML = ''; // Elimina iframe-ul cand se inchide modal-ul\n    trailerModalWrapper.classList.remove('open');\n  }\n\n  trailerBackdrop.addEventListener('click', closeTrailerModal);\n  document.addEventListener('keydown', e => {\n    if (e.key === 'Escape' && trailerModalWrapper.classList.contains('open')) {\n      closeTrailerModal();\n    }\n  });\n\n  return openTrailerModal;\n}\n","export function getFromStorage(key) {\n  return JSON.parse(localStorage.getItem(key)) || [];\n}\n\nexport function isInStorage(key, id) {\n  const items = getFromStorage(key);\n  return items.some(item => item.id === id);\n}\n\nexport function toggleStorage(key, movie) {\n  let items = getFromStorage(key);\n\n  if (isInStorage(key, movie.id)) {\n    items = items.filter(item => item.id !== movie.id);\n  } else {\n    items.push(movie);\n  }\n\n  localStorage.setItem(key, JSON.stringify(items));\n}\n\nexport function saveToStorage(key, data) {\n  localStorage.setItem(key, JSON.stringify(data));\n}\n","// Managing the \"Add to Watch\" and \"Add to Queue\" buttons\nimport { toggleStorage, isInStorage } from '../app/localStorage';\n\nconst libraryBtn = document.getElementById('library-btn');\nconst homeBtn = document.getElementById('home-btn');\nconst searchForm = document.getElementById('search-form');\nconst libraryButtons = document.getElementById('library-buttons');\nconst watchedButton = document.getElementById('watched-button');\nconst queueButton = document.getElementById('queue-button');\n\nexport function setupButtons(movie) {\n  watchedButton.textContent = isInStorage('watched', movie.id)\n    ? 'REMOVE FROM WATCHED'\n    : 'ADD TO WATCHED';\n\n  queueButton.textContent = isInStorage('queue', movie.id)\n    ? 'REMOVE FROM QUEUE'\n    : 'ADD TO QUEUE';\n\n  watchedButton.onclick = () => {\n    toggleStorage('watched', movie);\n    watchedButton.textContent = isInStorage('watched', movie.id)\n      ? 'REMOVE FROM WATCHED'\n      : 'ADD TO WATCHED';\n  };\n\n  queueButton.onclick = () => {\n    toggleStorage('queue', movie);\n    queueButton.textContent = isInStorage('queue', movie.id)\n      ? 'REMOVE FROM QUEUE'\n      : 'ADD TO QUEUE';\n  };\n}\nexport function toggleHeaderButtons() {\n\n  function activateHome() {\n    searchForm.style.display = 'block';\n    libraryButtons.style.display = 'none';\n\n    homeBtn.classList.add('active');\n    libraryBtn.classList.remove('active');\n  }\n\n  \n  function activateLibrary() {\n    searchForm.style.display = 'none';\n    libraryButtons.style.display = 'flex';\n\n    libraryBtn.classList.add('active');\n    homeBtn.classList.remove('active');\n  }\n\n\n  homeBtn.addEventListener('click', activateHome);\n  libraryBtn.addEventListener('click', activateLibrary);\n\n\n  activateHome();\n}\n\n","import {\n  fetchPopularMovies,\n  fetchMovieDetails,\n  fetchTrailerUrl,\n} from '../api/moviesApi';\nimport { generateMovieHTML } from '../components/movieList';\nimport { initializeTrailerModal } from '../components/trailer';\nimport { setupButtons } from '../components/buttons';\n\nexport async function initializeModal() {\n  const movieList = document.querySelector('.movies');\n  const modalWrapper = document.querySelector('.modal-wrapper');\n  const backdrop = document.querySelector('.backdrop');\n  const posterSection = document.getElementById('poster-section');\n  const movieTitle = document.getElementById('movie-title');\n  const movieVotes = document.getElementById('movie-votes');\n  const moviePopularity = document.getElementById('movie-popularity');\n  const originalTitle = document.getElementById('original-title');\n  const movieGenre = document.getElementById('movie-genre');\n  const movieAbout = document.getElementById('movie-about');\n  const trailerButton = document.getElementById('trailer-button');\n\n  const openTrailerModal = initializeTrailerModal();\n\n  function renderMoviesModal(movies) {\n    movieList.innerHTML = '';\n    const moviesMarkup = movies\n      .map(movie => {\n        return generateMovieHTML(movie);\n      })\n      .join('');\n\n    movieList.innerHTML = moviesMarkup;\n  }\n\n  // adaugam listener pe parinte\n  movieList.addEventListener('click', event => {\n    const movieCard = event.target.closest('.movie_list_item');\n    if (movieCard) {\n      const movieId = movieCard.getAttribute('data-movie-id');\n      handleMovieDetails(movieId);\n    }\n  });\n\n  async function handleMovieDetails(movieId) {\n    try {\n      const movieDetails = await fetchMovieDetails(movieId);\n      populateModal(movieDetails);\n    } catch (error) {\n      console.error('Error fetching movie details:', error);\n    }\n  }\n\n  function populateModal(data) {\n    posterSection.style.backgroundImage = `url('https://image.tmdb.org/t/p/w500/${\n      data.poster_path || ''\n    }')`;\n\n    movieTitle.textContent = data.title || 'No Title';\n\n    let ratingClass = 'movie__average--red';\n    if (data.vote_average >= 7) ratingClass = 'movie__average--green';\n    else if (data.vote_average >= 5) ratingClass = 'movie__average--orange';\n\n    const modalMovieVotes = document.querySelector('#modal-movie-votes');\n    if (modalMovieVotes) {\n      modalMovieVotes.innerHTML = `\n    <span class=\"vote-average ${ratingClass}\">\n      ${data.vote_average?.toFixed(1) || 'N/A'}\n    </span>\n    <span class=\"vote-separator\">/</span>\n    <span class=\"vote-count\">\n      ${data.vote_count || 0}\n    </span>\n  `;\n    }\n\n    moviePopularity.textContent = data.popularity?.toFixed(1) || 'N/A';\n    originalTitle.textContent = data.original_title || 'N/A';\n    movieGenre.textContent =\n      data.genres?.map(g => g.name).join(', ') || 'Unknown';\n    movieAbout.textContent = data.overview || 'No description available.';\n\n    trailerButton.onclick = () => fetchTrailer(data.id);\n    setupButtons(data);\n    openModal();\n  }\n\n  async function fetchTrailer(movieId) {\n    try {\n      const trailerUrl = await fetchTrailerUrl(movieId);\n      if (trailerUrl) {\n        openTrailerModal(trailerUrl);\n      } else {\n        alert('Trailer not available.');\n      }\n    } catch (error) {\n      console.error('Error fetching trailer:', error);\n    }\n  }\n  function openModal() {\n    document.body.classList.add('modal-open');\n    modalWrapper.classList.add('open');\n\n    backdrop.addEventListener('click', closeModal);\n    document.addEventListener('keydown', handleKeydown);\n    modalWrapper.addEventListener('click', handleOutsideClick);\n  }\n\n  function closeModal() {\n    document.body.classList.remove('modal-open');\n    modalWrapper.classList.remove('open');\n\n    // eliminam listeners la inchiderea modalului\n    backdrop.removeEventListener('click', closeModal);\n    document.removeEventListener('keydown', handleKeydown);\n    modalWrapper.removeEventListener('click', handleOutsideClick);\n  }\n\n  function handleKeydown(e) {\n    if (e.key === 'Escape' && modalWrapper.classList.contains('open')) {\n      closeModal();\n    }\n  }\n\n  function handleOutsideClick(e) {\n    const modalContent = document.getElementById('movie-details');\n    if (!modalContent.contains(e.target)) {\n      closeModal();\n    }\n  }\n\n  const movies = await fetchPopularMovies();\n  renderMoviesModal(movies);\n}\n","import './sass/index.scss';\nimport './sass/_pagination.scss';\n\nimport './js/components/searchBar';\n\nimport { renderMovies } from './js/components/movieList.js';\nimport { initializeModal } from './js/components/modal.js';\nimport './js/components/pagination.js';\nimport { toggleHeaderButtons } from './js/components/buttons.js';\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  renderMovies();\n  initializeModal();\n  toggleHeaderButtons();\n});\n"],"names":["$cb5bb855f2146911$var$genresCache","async","$cb5bb855f2146911$export$c5604fa8028da00","length","response","fetch","data","json","genres","error","console","$cb5bb855f2146911$export$e95d448b93b2cdb","document","getElementById","querySelector","$b5a1802b03d58e34$export$b21c1b4271bdbe93","$89f896eead6f17ea$var$btn1Ref","$89f896eead6f17ea$var$btn2Ref","$89f896eead6f17ea$var$btn3Ref","$89f896eead6f17ea$var$btn4Ref","$89f896eead6f17ea$var$btn5Ref","$89f896eead6f17ea$var$firstPageRef","$89f896eead6f17ea$var$lastPageRef","$89f896eead6f17ea$var$paginationRef","$89f896eead6f17ea$var$rightArrowRef","$89f896eead6f17ea$var$leftArrowRef","$89f896eead6f17ea$var$prevDotsRef","$89f896eead6f17ea$var$afterDotsRef","addEventListener","event","target","tagName","blur","classList","contains","dataset","index","$89f896eead6f17ea$export$385972cd6b54c3e1","Number","textContent","totalPages","startPage","endPage","Math","min","max","forEach","btn","pageNumber","toggle","hidden","$89f896eead6f17ea$var$updatePageButtons","innerHTML","window","scrollTo","top","behavior","$18703c3ad17f34d6$export$1a30573fde3dfc62","querySelectorAll","$89f896eead6f17ea$var$pageSize","$93295c8431c78407$export$225b489b0d997c20","apiUrl","results","map","movie","genre_names","genre_ids","id","find","genre","name","$93295c8431c78407$export$a199ce1860fbd5cd","movieId","MOVIE_DETAIL_URL","log","ok","Error","$93295c8431c78407$export$b0c4d3ac9887d994","query","page","URLSearchParams","api_key","language","include_adult","warn","$93295c8431c78407$export$95d25a3e459db988","trailer","video","type","site","key","$18703c3ad17f34d6$export$53da6709e29add30","ratingClass","vote_average","moviePoster","poster_path","altText","title","genresArray","displayedGenres","slice","push","join","rating","undefined","toFixed","releaseYear","release_date","Date","getFullYear","filter","Boolean","movies","galleryElement","perPage","innerWidth","moviesHTML","$67c7bf5189e612b6$export$ed513bafb229402d","errorElement","Array","isArray","style","display","moviesWithGenres","$7a61c8decd4d727f$var$searchText","$1ba3e3127818fd45$export$710d652e87bebf6a","trailerModalWrapper","trailerBackdrop","trailerContent","closeTrailerModal","remove","e","trailerUrl","add","$8e6b099802297ef3$export$e4c9b9bae9539063","JSON","parse","localStorage","getItem","$8e6b099802297ef3$export$35f3dfcec2dbf042","some","item","$8e6b099802297ef3$export$5894ad57f1a6e020","items","setItem","stringify","preventDefault","value","trim","$63e0eb7203c7b511$var$libraryBtn","$63e0eb7203c7b511$var$homeBtn","$63e0eb7203c7b511$var$searchForm","$63e0eb7203c7b511$var$libraryButtons","$63e0eb7203c7b511$var$watchedButton","$63e0eb7203c7b511$var$queueButton","$63e0eb7203c7b511$export$c47022e4403e80f6","onclick","$63e0eb7203c7b511$export$c13b0b1659cdb1bd","activateHome","$65a0cd66e497f444$export$aa9b0c0080dbe389","movieList","modalWrapper","backdrop","posterSection","movieTitle","moviePopularity","originalTitle","movieGenre","movieAbout","trailerButton","openTrailerModal","closeModal","body","removeEventListener","handleKeydown","handleOutsideClick","movieCard","closest","backgroundImage","modalMovieVotes","vote_count","popularity","original_title","g","overview","alert","fetchTrailer","populateModal","handleMovieDetails","getAttribute","moviesMarkup","renderMoviesModal"],"version":3,"file":"index.6535eed6.js.map"}